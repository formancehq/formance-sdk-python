lockVersion: 2.0.0
id: 1e0c88f5-b1c8-4198-83d8-36bd00451cd3
management:
  docChecksum: 26dc51843f72f8922c6265f03b5e50f2
  docVersion: v2.1.1
  speakeasyVersion: 1.441.1
  generationVersion: 2.461.2
  releaseVersion: 4.2.0
  configChecksum: 5edce78524c7b06521fca2b4d4f4d70f
  repoURL: https://github.com/formancehq/formance-sdk-python.git
  repoSubDirectory: .
  installationURL: https://github.com/formancehq/formance-sdk-python.git
  published: true
features:
  python:
    additionalDependencies: 0.1.0
    bigint: 0.1.0
    constsAndDefaults: 0.1.4
    core: 4.8.16
    deprecations: 2.81.1
    downloadStreams: 0.0.2
    errors: 2.83.0
    getRequestBodies: 2.81.1
    globalSecurity: 2.83.7
    globalSecurityCallbacks: 0.1.0
    globalServerURLs: 2.82.2
    ignores: 2.81.1
    nameOverrides: 2.81.2
    nullables: 0.1.0
    oauth2ClientCredentials: 0.2.0
    responseFormat: 0.1.0
    sdkHooks: 0.1.0
    tests: 0.4.0
    unions: 2.82.10
generatedFiles:
  - .gitattributes
  - CONTRIBUTING.md
  - USAGE.md
  - docs/models/errors/error.md
  - docs/models/errors/errorcode.md
  - docs/models/errors/errorresponse.md
  - docs/models/errors/paymentserrorresponse.md
  - docs/models/errors/reconciliationerrorresponse.md
  - docs/models/errors/schemaserrorcode.md
  - docs/models/errors/schemaswalletserrorresponseerrorcode.md
  - docs/models/errors/v2error.md
  - docs/models/errors/v2errorresponse.md
  - docs/models/errors/walletserrorresponse.md
  - docs/models/errors/webhookserrorresponse.md
  - docs/models/operations/activateconfigrequest.md
  - docs/models/operations/activateconfigresponse.md
  - docs/models/operations/addaccounttopoolrequest.md
  - docs/models/operations/addaccounttopoolresponse.md
  - docs/models/operations/addmetadataontransactionrequest.md
  - docs/models/operations/addmetadataontransactionresponse.md
  - docs/models/operations/addmetadatatoaccountrequest.md
  - docs/models/operations/addmetadatatoaccountresponse.md
  - docs/models/operations/canceleventrequest.md
  - docs/models/operations/canceleventresponse.md
  - docs/models/operations/changeconfigsecretrequest.md
  - docs/models/operations/changeconfigsecretresponse.md
  - docs/models/operations/confirmholdrequest.md
  - docs/models/operations/confirmholdresponse.md
  - docs/models/operations/connectorstransferrequest.md
  - docs/models/operations/connectorstransferresponse.md
  - docs/models/operations/countaccountsrequest.md
  - docs/models/operations/countaccountsresponse.md
  - docs/models/operations/counttransactionsrequest.md
  - docs/models/operations/counttransactionsresponse.md
  - docs/models/operations/createaccountresponse.md
  - docs/models/operations/createbalancerequest.md
  - docs/models/operations/createbalanceresponse.md
  - docs/models/operations/createbankaccountresponse.md
  - docs/models/operations/createclientresponse.md
  - docs/models/operations/createpaymentresponse.md
  - docs/models/operations/createpolicyresponse.md
  - docs/models/operations/createpoolresponse.md
  - docs/models/operations/createsecretrequest.md
  - docs/models/operations/createsecretresponse.md
  - docs/models/operations/createtransactionrequest.md
  - docs/models/operations/createtransactionresponse.md
  - docs/models/operations/createtransactionsrequest.md
  - docs/models/operations/createtransactionsresponse.md
  - docs/models/operations/createtransferinitiationresponse.md
  - docs/models/operations/createtriggerresponse.md
  - docs/models/operations/createwalletrequest.md
  - docs/models/operations/createwalletresponse.md
  - docs/models/operations/createworkflowresponse.md
  - docs/models/operations/creditwalletrequest.md
  - docs/models/operations/creditwalletresponse.md
  - docs/models/operations/deactivateconfigrequest.md
  - docs/models/operations/deactivateconfigresponse.md
  - docs/models/operations/debitwalletrequest.md
  - docs/models/operations/debitwalletresponse.md
  - docs/models/operations/deleteclientrequest.md
  - docs/models/operations/deleteclientresponse.md
  - docs/models/operations/deleteconfigrequest.md
  - docs/models/operations/deleteconfigresponse.md
  - docs/models/operations/deletepolicyrequest.md
  - docs/models/operations/deletepolicyresponse.md
  - docs/models/operations/deletepoolrequest.md
  - docs/models/operations/deletepoolresponse.md
  - docs/models/operations/deletesecretrequest.md
  - docs/models/operations/deletesecretresponse.md
  - docs/models/operations/deletetransferinitiationrequest.md
  - docs/models/operations/deletetransferinitiationresponse.md
  - docs/models/operations/deletetriggerrequest.md
  - docs/models/operations/deletetriggerresponse.md
  - docs/models/operations/deleteworkflowrequest.md
  - docs/models/operations/deleteworkflowresponse.md
  - docs/models/operations/forwardbankaccountrequest.md
  - docs/models/operations/forwardbankaccountresponse.md
  - docs/models/operations/getaccountbalancesrequest.md
  - docs/models/operations/getaccountbalancesresponse.md
  - docs/models/operations/getaccountrequest.md
  - docs/models/operations/getaccountresponse.md
  - docs/models/operations/getbalancerequest.md
  - docs/models/operations/getbalanceresponse.md
  - docs/models/operations/getbalancesaggregatedrequest.md
  - docs/models/operations/getbalancesaggregatedresponse.md
  - docs/models/operations/getbalancesrequest.md
  - docs/models/operations/getbalancesresponse.md
  - docs/models/operations/getbankaccountrequest.md
  - docs/models/operations/getbankaccountresponse.md
  - docs/models/operations/getconnectortaskrequest.md
  - docs/models/operations/getconnectortaskresponse.md
  - docs/models/operations/getconnectortaskv1request.md
  - docs/models/operations/getconnectortaskv1response.md
  - docs/models/operations/getholdrequest.md
  - docs/models/operations/getholdresponse.md
  - docs/models/operations/getholdsrequest.md
  - docs/models/operations/getholdsresponse.md
  - docs/models/operations/getinforesponse.md
  - docs/models/operations/getinstancehistoryrequest.md
  - docs/models/operations/getinstancehistoryresponse.md
  - docs/models/operations/getinstancerequest.md
  - docs/models/operations/getinstanceresponse.md
  - docs/models/operations/getinstancestagehistoryrequest.md
  - docs/models/operations/getinstancestagehistoryresponse.md
  - docs/models/operations/getledgerinforequest.md
  - docs/models/operations/getledgerinforesponse.md
  - docs/models/operations/getmanyconfigsrequest.md
  - docs/models/operations/getmanyconfigsresponse.md
  - docs/models/operations/getmappingrequest.md
  - docs/models/operations/getmappingresponse.md
  - docs/models/operations/getoidcwellknownsresponse.md
  - docs/models/operations/getpaymentrequest.md
  - docs/models/operations/getpaymentresponse.md
  - docs/models/operations/getpolicyrequest.md
  - docs/models/operations/getpolicyresponse.md
  - docs/models/operations/getpoolbalancesrequest.md
  - docs/models/operations/getpoolbalancesresponse.md
  - docs/models/operations/getpoolrequest.md
  - docs/models/operations/getpoolresponse.md
  - docs/models/operations/getreconciliationrequest.md
  - docs/models/operations/getreconciliationresponse.md
  - docs/models/operations/getserverinforesponse.md
  - docs/models/operations/gettransactionrequest.md
  - docs/models/operations/gettransactionresponse.md
  - docs/models/operations/gettransactionsrequest.md
  - docs/models/operations/gettransactionsresponse.md
  - docs/models/operations/gettransferinitiationrequest.md
  - docs/models/operations/gettransferinitiationresponse.md
  - docs/models/operations/getversionsresponse.md
  - docs/models/operations/getwalletrequest.md
  - docs/models/operations/getwalletresponse.md
  - docs/models/operations/getwalletsummaryrequest.md
  - docs/models/operations/getwalletsummaryresponse.md
  - docs/models/operations/getworkflowrequest.md
  - docs/models/operations/getworkflowresponse.md
  - docs/models/operations/insertconfigresponse.md
  - docs/models/operations/installconnectorrequest.md
  - docs/models/operations/installconnectorresponse.md
  - docs/models/operations/listaccountsrequest.md
  - docs/models/operations/listaccountsresponse.md
  - docs/models/operations/listallconnectorsresponse.md
  - docs/models/operations/listbalancesrequest.md
  - docs/models/operations/listbalancesresponse.md
  - docs/models/operations/listbankaccountsrequest.md
  - docs/models/operations/listbankaccountsresponse.md
  - docs/models/operations/listclientsresponse.md
  - docs/models/operations/listconfigsavailableconnectorsresponse.md
  - docs/models/operations/listconnectortasksrequest.md
  - docs/models/operations/listconnectortasksresponse.md
  - docs/models/operations/listconnectortasksv1request.md
  - docs/models/operations/listconnectortasksv1response.md
  - docs/models/operations/listinstancesrequest.md
  - docs/models/operations/listinstancesresponse.md
  - docs/models/operations/listlogsrequest.md
  - docs/models/operations/listlogsresponse.md
  - docs/models/operations/listpaymentsrequest.md
  - docs/models/operations/listpaymentsresponse.md
  - docs/models/operations/listpoliciesrequest.md
  - docs/models/operations/listpoliciesresponse.md
  - docs/models/operations/listpoolsrequest.md
  - docs/models/operations/listpoolsresponse.md
  - docs/models/operations/listreconciliationsrequest.md
  - docs/models/operations/listreconciliationsresponse.md
  - docs/models/operations/listtransactionsrequest.md
  - docs/models/operations/listtransactionsresponse.md
  - docs/models/operations/listtransferinitiationsrequest.md
  - docs/models/operations/listtransferinitiationsresponse.md
  - docs/models/operations/listtriggersoccurrencesrequest.md
  - docs/models/operations/listtriggersoccurrencesresponse.md
  - docs/models/operations/listtriggersrequest.md
  - docs/models/operations/listtriggersresponse.md
  - docs/models/operations/listusersresponse.md
  - docs/models/operations/listwalletsrequest.md
  - docs/models/operations/listwalletsresponse.md
  - docs/models/operations/listworkflowsresponse.md
  - docs/models/operations/metadata.md
  - docs/models/operations/orchestrationgetserverinforesponse.md
  - docs/models/operations/order.md
  - docs/models/operations/paymentsgetaccountrequest.md
  - docs/models/operations/paymentsgetaccountresponse.md
  - docs/models/operations/paymentsgetserverinforesponse.md
  - docs/models/operations/paymentslistaccountsrequest.md
  - docs/models/operations/paymentslistaccountsresponse.md
  - docs/models/operations/readclientrequest.md
  - docs/models/operations/readclientresponse.md
  - docs/models/operations/readconnectorconfigrequest.md
  - docs/models/operations/readconnectorconfigresponse.md
  - docs/models/operations/readconnectorconfigv1request.md
  - docs/models/operations/readconnectorconfigv1response.md
  - docs/models/operations/readstatsrequest.md
  - docs/models/operations/readstatsresponse.md
  - docs/models/operations/readtriggerrequest.md
  - docs/models/operations/readtriggerresponse.md
  - docs/models/operations/readuserrequest.md
  - docs/models/operations/readuserresponse.md
  - docs/models/operations/reconcilerequest.md
  - docs/models/operations/reconcileresponse.md
  - docs/models/operations/reconciliationgetserverinforesponse.md
  - docs/models/operations/removeaccountfrompoolrequest.md
  - docs/models/operations/removeaccountfrompoolresponse.md
  - docs/models/operations/resetconnectorrequest.md
  - docs/models/operations/resetconnectorresponse.md
  - docs/models/operations/resetconnectorv1request.md
  - docs/models/operations/resetconnectorv1response.md
  - docs/models/operations/retrytransferinitiationrequest.md
  - docs/models/operations/retrytransferinitiationresponse.md
  - docs/models/operations/reversetransferinitiationrequest.md
  - docs/models/operations/reversetransferinitiationresponse.md
  - docs/models/operations/reverttransactionrequest.md
  - docs/models/operations/reverttransactionresponse.md
  - docs/models/operations/runscriptrequest.md
  - docs/models/operations/runscriptresponse.md
  - docs/models/operations/runworkflowrequest.md
  - docs/models/operations/runworkflowresponse.md
  - docs/models/operations/searchgetserverinforesponse.md
  - docs/models/operations/searchresponse.md
  - docs/models/operations/sendeventrequest.md
  - docs/models/operations/sendeventrequestbody.md
  - docs/models/operations/sendeventresponse.md
  - docs/models/operations/testconfigrequest.md
  - docs/models/operations/testconfigresponse.md
  - docs/models/operations/testtriggerrequest.md
  - docs/models/operations/testtriggerresponse.md
  - docs/models/operations/udpatetransferinitiationstatusrequest.md
  - docs/models/operations/udpatetransferinitiationstatusresponse.md
  - docs/models/operations/uninstallconnectorrequest.md
  - docs/models/operations/uninstallconnectorresponse.md
  - docs/models/operations/uninstallconnectorv1request.md
  - docs/models/operations/uninstallconnectorv1response.md
  - docs/models/operations/updatebankaccountmetadatarequest.md
  - docs/models/operations/updatebankaccountmetadataresponse.md
  - docs/models/operations/updateclientrequest.md
  - docs/models/operations/updateclientresponse.md
  - docs/models/operations/updateconnectorconfigv1request.md
  - docs/models/operations/updateconnectorconfigv1response.md
  - docs/models/operations/updatemappingrequest.md
  - docs/models/operations/updatemappingresponse.md
  - docs/models/operations/updatemetadatarequest.md
  - docs/models/operations/updatemetadataresponse.md
  - docs/models/operations/updatewalletrequest.md
  - docs/models/operations/updatewalletrequestbody.md
  - docs/models/operations/updatewalletresponse.md
  - docs/models/operations/v2addmetadataontransactionrequest.md
  - docs/models/operations/v2addmetadataontransactionresponse.md
  - docs/models/operations/v2addmetadatatoaccountrequest.md
  - docs/models/operations/v2addmetadatatoaccountresponse.md
  - docs/models/operations/v2canceleventrequest.md
  - docs/models/operations/v2canceleventresponse.md
  - docs/models/operations/v2countaccountsrequest.md
  - docs/models/operations/v2countaccountsresponse.md
  - docs/models/operations/v2counttransactionsrequest.md
  - docs/models/operations/v2counttransactionsresponse.md
  - docs/models/operations/v2createbulkrequest.md
  - docs/models/operations/v2createbulkresponse.md
  - docs/models/operations/v2createledgerrequest.md
  - docs/models/operations/v2createledgerresponse.md
  - docs/models/operations/v2createtransactionrequest.md
  - docs/models/operations/v2createtransactionresponse.md
  - docs/models/operations/v2createtriggerresponse.md
  - docs/models/operations/v2createworkflowresponse.md
  - docs/models/operations/v2deleteaccountmetadatarequest.md
  - docs/models/operations/v2deleteaccountmetadataresponse.md
  - docs/models/operations/v2deleteledgermetadatarequest.md
  - docs/models/operations/v2deleteledgermetadataresponse.md
  - docs/models/operations/v2deletetransactionmetadatarequest.md
  - docs/models/operations/v2deletetransactionmetadataresponse.md
  - docs/models/operations/v2deletetriggerrequest.md
  - docs/models/operations/v2deletetriggerresponse.md
  - docs/models/operations/v2deleteworkflowrequest.md
  - docs/models/operations/v2deleteworkflowresponse.md
  - docs/models/operations/v2exportlogsrequest.md
  - docs/models/operations/v2exportlogsresponse.md
  - docs/models/operations/v2getaccountrequest.md
  - docs/models/operations/v2getaccountresponse.md
  - docs/models/operations/v2getbalancesaggregatedrequest.md
  - docs/models/operations/v2getbalancesaggregatedresponse.md
  - docs/models/operations/v2getinforesponse.md
  - docs/models/operations/v2getinstancehistoryrequest.md
  - docs/models/operations/v2getinstancehistoryresponse.md
  - docs/models/operations/v2getinstancerequest.md
  - docs/models/operations/v2getinstanceresponse.md
  - docs/models/operations/v2getinstancestagehistoryrequest.md
  - docs/models/operations/v2getinstancestagehistoryresponse.md
  - docs/models/operations/v2getledgerinforequest.md
  - docs/models/operations/v2getledgerinforesponse.md
  - docs/models/operations/v2getledgerrequest.md
  - docs/models/operations/v2getledgerresponse.md
  - docs/models/operations/v2getserverinforesponse.md
  - docs/models/operations/v2gettransactionrequest.md
  - docs/models/operations/v2gettransactionresponse.md
  - docs/models/operations/v2getvolumeswithbalancesrequest.md
  - docs/models/operations/v2getvolumeswithbalancesresponse.md
  - docs/models/operations/v2getworkflowrequest.md
  - docs/models/operations/v2getworkflowresponse.md
  - docs/models/operations/v2importlogsrequest.md
  - docs/models/operations/v2importlogsresponse.md
  - docs/models/operations/v2listaccountsrequest.md
  - docs/models/operations/v2listaccountsresponse.md
  - docs/models/operations/v2listinstancesrequest.md
  - docs/models/operations/v2listinstancesresponse.md
  - docs/models/operations/v2listledgersrequest.md
  - docs/models/operations/v2listledgersresponse.md
  - docs/models/operations/v2listlogsrequest.md
  - docs/models/operations/v2listlogsresponse.md
  - docs/models/operations/v2listtransactionsrequest.md
  - docs/models/operations/v2listtransactionsresponse.md
  - docs/models/operations/v2listtriggersoccurrencesrequest.md
  - docs/models/operations/v2listtriggersoccurrencesresponse.md
  - docs/models/operations/v2listtriggersrequest.md
  - docs/models/operations/v2listtriggersresponse.md
  - docs/models/operations/v2listworkflowsrequest.md
  - docs/models/operations/v2listworkflowsresponse.md
  - docs/models/operations/v2readstatsrequest.md
  - docs/models/operations/v2readstatsresponse.md
  - docs/models/operations/v2readtriggerrequest.md
  - docs/models/operations/v2readtriggerresponse.md
  - docs/models/operations/v2reverttransactionrequest.md
  - docs/models/operations/v2reverttransactionresponse.md
  - docs/models/operations/v2runworkflowrequest.md
  - docs/models/operations/v2runworkflowresponse.md
  - docs/models/operations/v2sendeventrequest.md
  - docs/models/operations/v2sendeventrequestbody.md
  - docs/models/operations/v2sendeventresponse.md
  - docs/models/operations/v2updateledgermetadatarequest.md
  - docs/models/operations/v2updateledgermetadataresponse.md
  - docs/models/operations/voidholdrequest.md
  - docs/models/operations/voidholdresponse.md
  - docs/models/operations/walletsgetserverinforesponse.md
  - docs/models/shared/account.md
  - docs/models/shared/accountbalance.md
  - docs/models/shared/accountrequest.md
  - docs/models/shared/accountresponse.md
  - docs/models/shared/accountscursor.md
  - docs/models/shared/accountscursorresponse.md
  - docs/models/shared/accountscursorresponsecursor.md
  - docs/models/shared/accounttype.md
  - docs/models/shared/accountwithvolumesandbalances.md
  - docs/models/shared/activityaddaccountmetadata.md
  - docs/models/shared/activityconfirmhold.md
  - docs/models/shared/activitycreatetransaction.md
  - docs/models/shared/activitycreatetransactionoutput.md
  - docs/models/shared/activitycreditwallet.md
  - docs/models/shared/activitydebitwallet.md
  - docs/models/shared/activitydebitwalletoutput.md
  - docs/models/shared/activitygetaccount.md
  - docs/models/shared/activitygetaccountoutput.md
  - docs/models/shared/activitygetpayment.md
  - docs/models/shared/activitygetpaymentoutput.md
  - docs/models/shared/activitygetwallet.md
  - docs/models/shared/activitygetwalletoutput.md
  - docs/models/shared/activitylistwallets.md
  - docs/models/shared/activityreverttransaction.md
  - docs/models/shared/activityreverttransactionoutput.md
  - docs/models/shared/activitystripetransfer.md
  - docs/models/shared/activityvoidhold.md
  - docs/models/shared/addaccounttopoolrequest.md
  - docs/models/shared/adyenconfig.md
  - docs/models/shared/aggregatebalancesresponse.md
  - docs/models/shared/assetholder.md
  - docs/models/shared/atlarconfig.md
  - docs/models/shared/attempt.md
  - docs/models/shared/attemptresponse.md
  - docs/models/shared/balance.md
  - docs/models/shared/balances.md
  - docs/models/shared/balancescursor.md
  - docs/models/shared/balancescursorcursor.md
  - docs/models/shared/balancescursorresponse.md
  - docs/models/shared/balancescursorresponsecursor.md
  - docs/models/shared/balancewithassets.md
  - docs/models/shared/bankaccount.md
  - docs/models/shared/bankaccountrelatedaccounts.md
  - docs/models/shared/bankaccountrequest.md
  - docs/models/shared/bankaccountresponse.md
  - docs/models/shared/bankaccountscursor.md
  - docs/models/shared/bankaccountscursorcursor.md
  - docs/models/shared/bankingcircleconfig.md
  - docs/models/shared/client.md
  - docs/models/shared/clientsecret.md
  - docs/models/shared/config.md
  - docs/models/shared/configchangesecret.md
  - docs/models/shared/configinfo.md
  - docs/models/shared/configinforesponse.md
  - docs/models/shared/configresponse.md
  - docs/models/shared/configsresponse.md
  - docs/models/shared/configsresponsecursor.md
  - docs/models/shared/configuser.md
  - docs/models/shared/confirmholdrequest.md
  - docs/models/shared/connector.md
  - docs/models/shared/connectorconfig.md
  - docs/models/shared/connectorconfigresponse.md
  - docs/models/shared/connectorresponse.md
  - docs/models/shared/connectorsconfigsresponse.md
  - docs/models/shared/connectorsconfigsresponseconnector.md
  - docs/models/shared/connectorsconfigsresponsedata.md
  - docs/models/shared/connectorsresponse.md
  - docs/models/shared/connectorsresponsedata.md
  - docs/models/shared/contract.md
  - docs/models/shared/createbalancerequest.md
  - docs/models/shared/createbalanceresponse.md
  - docs/models/shared/createclientrequest.md
  - docs/models/shared/createclientresponse.md
  - docs/models/shared/createsecretrequest.md
  - docs/models/shared/createsecretresponse.md
  - docs/models/shared/createtriggerresponse.md
  - docs/models/shared/createwalletrequest.md
  - docs/models/shared/createwalletresponse.md
  - docs/models/shared/createworkflowrequest.md
  - docs/models/shared/createworkflowresponse.md
  - docs/models/shared/creditwalletrequest.md
  - docs/models/shared/currencycloudconfig.md
  - docs/models/shared/cursor.md
  - docs/models/shared/data.md
  - docs/models/shared/debitwalletrequest.md
  - docs/models/shared/debitwalletresponse.md
  - docs/models/shared/descriptor.md
  - docs/models/shared/dummypayconfig.md
  - docs/models/shared/errorresponse.md
  - docs/models/shared/errorsenum.md
  - docs/models/shared/expandeddebithold.md
  - docs/models/shared/expr.md
  - docs/models/shared/filter_.md
  - docs/models/shared/forwardbankaccountrequest.md
  - docs/models/shared/genericconfig.md
  - docs/models/shared/getbalanceresponse.md
  - docs/models/shared/getholdresponse.md
  - docs/models/shared/getholdsresponse.md
  - docs/models/shared/getholdsresponsecursor.md
  - docs/models/shared/gettransactionsresponse.md
  - docs/models/shared/gettransactionsresponsecursor.md
  - docs/models/shared/getversionsresponse.md
  - docs/models/shared/getwalletresponse.md
  - docs/models/shared/getwalletsummaryresponse.md
  - docs/models/shared/getworkflowinstancehistoryresponse.md
  - docs/models/shared/getworkflowinstancehistorystageresponse.md
  - docs/models/shared/getworkflowinstanceresponse.md
  - docs/models/shared/getworkflowresponse.md
  - docs/models/shared/hold.md
  - docs/models/shared/key.md
  - docs/models/shared/ledgeraccountsubject.md
  - docs/models/shared/ledgerinfo.md
  - docs/models/shared/ledgerinforesponse.md
  - docs/models/shared/ledgerstorage.md
  - docs/models/shared/listbalancesresponse.md
  - docs/models/shared/listbalancesresponsecursor.md
  - docs/models/shared/listclientsresponse.md
  - docs/models/shared/listrunsresponse.md
  - docs/models/shared/listtriggersoccurrencesresponse.md
  - docs/models/shared/listtriggersresponse.md
  - docs/models/shared/listusersresponse.md
  - docs/models/shared/listwalletsresponse.md
  - docs/models/shared/listwalletsresponsecursor.md
  - docs/models/shared/listworkflowsresponse.md
  - docs/models/shared/log.md
  - docs/models/shared/logscursorresponse.md
  - docs/models/shared/logscursorresponsecursor.md
  - docs/models/shared/mangopayconfig.md
  - docs/models/shared/mapping.md
  - docs/models/shared/mappingresponse.md
  - docs/models/shared/metadata.md
  - docs/models/shared/migrationinfo.md
  - docs/models/shared/modulrconfig.md
  - docs/models/shared/monetary.md
  - docs/models/shared/moneycorpconfig.md
  - docs/models/shared/orchestrationaccount.md
  - docs/models/shared/orchestrationconnector.md
  - docs/models/shared/orchestrationcreditwalletrequest.md
  - docs/models/shared/orchestrationlistwalletsresponse.md
  - docs/models/shared/orchestrationlistwalletsresponsecursor.md
  - docs/models/shared/orchestrationpayment.md
  - docs/models/shared/orchestrationpaymentadjustment.md
  - docs/models/shared/orchestrationpaymentadjustmentraw.md
  - docs/models/shared/orchestrationpaymentmetadata.md
  - docs/models/shared/orchestrationpaymentraw.md
  - docs/models/shared/orchestrationpaymentscheme.md
  - docs/models/shared/orchestrationpaymentstatus.md
  - docs/models/shared/orchestrationpaymenttype.md
  - docs/models/shared/orchestrationposttransaction.md
  - docs/models/shared/orchestrationposttransactionscript.md
  - docs/models/shared/orchestrationtransaction.md
  - docs/models/shared/orchestrationv2transaction.md
  - docs/models/shared/orchestrationwallet.md
  - docs/models/shared/payment.md
  - docs/models/shared/paymentadjustment.md
  - docs/models/shared/paymentadjustmentraw.md
  - docs/models/shared/paymentrequest.md
  - docs/models/shared/paymentresponse.md
  - docs/models/shared/paymentsaccount.md
  - docs/models/shared/paymentsaccountraw.md
  - docs/models/shared/paymentsaccountresponse.md
  - docs/models/shared/paymentscheme.md
  - docs/models/shared/paymentscursor.md
  - docs/models/shared/paymentscursorcursor.md
  - docs/models/shared/paymentserrorsenum.md
  - docs/models/shared/paymentstatus.md
  - docs/models/shared/paymenttype.md
  - docs/models/shared/policiescursorresponse.md
  - docs/models/shared/policiescursorresponsecursor.md
  - docs/models/shared/policy.md
  - docs/models/shared/policyrequest.md
  - docs/models/shared/policyresponse.md
  - docs/models/shared/pool.md
  - docs/models/shared/poolbalance.md
  - docs/models/shared/poolbalances.md
  - docs/models/shared/poolbalancesresponse.md
  - docs/models/shared/poolrequest.md
  - docs/models/shared/poolresponse.md
  - docs/models/shared/poolscursor.md
  - docs/models/shared/poolscursorcursor.md
  - docs/models/shared/posting.md
  - docs/models/shared/posttransaction.md
  - docs/models/shared/posttransactionscript.md
  - docs/models/shared/query.md
  - docs/models/shared/queryraw.md
  - docs/models/shared/raw.md
  - docs/models/shared/readclientresponse.md
  - docs/models/shared/readtriggerresponse.md
  - docs/models/shared/readuserresponse.md
  - docs/models/shared/reconciliation.md
  - docs/models/shared/reconciliationrequest.md
  - docs/models/shared/reconciliationresponse.md
  - docs/models/shared/reconciliationscursorresponse.md
  - docs/models/shared/reconciliationscursorresponsecursor.md
  - docs/models/shared/response.md
  - docs/models/shared/responsecursor.md
  - docs/models/shared/reversetransferinitiationrequest.md
  - docs/models/shared/runworkflowresponse.md
  - docs/models/shared/schemas.md
  - docs/models/shared/scheme.md
  - docs/models/shared/script.md
  - docs/models/shared/scriptresponse.md
  - docs/models/shared/secret.md
  - docs/models/shared/security.md
  - docs/models/shared/serverinfo.md
  - docs/models/shared/stage.md
  - docs/models/shared/stagedelay.md
  - docs/models/shared/stagesend.md
  - docs/models/shared/stagesenddestination.md
  - docs/models/shared/stagesenddestinationaccount.md
  - docs/models/shared/stagesenddestinationpayment.md
  - docs/models/shared/stagesenddestinationwallet.md
  - docs/models/shared/stagesendsource.md
  - docs/models/shared/stagesendsourceaccount.md
  - docs/models/shared/stagesendsourcepayment.md
  - docs/models/shared/stagesendsourcewallet.md
  - docs/models/shared/stagestatus.md
  - docs/models/shared/stagewaitevent.md
  - docs/models/shared/state.md
  - docs/models/shared/stats.md
  - docs/models/shared/statsresponse.md
  - docs/models/shared/status.md
  - docs/models/shared/storage.md
  - docs/models/shared/stripeconfig.md
  - docs/models/shared/subject.md
  - docs/models/shared/taskbankingcircle.md
  - docs/models/shared/taskbankingcirclestate.md
  - docs/models/shared/taskcurrencycloud.md
  - docs/models/shared/taskcurrencyclouddescriptor.md
  - docs/models/shared/taskcurrencycloudstate.md
  - docs/models/shared/taskdummypay.md
  - docs/models/shared/taskdummypaydescriptor.md
  - docs/models/shared/taskdummypaystate.md
  - docs/models/shared/taskmangopay.md
  - docs/models/shared/taskmangopaydescriptor.md
  - docs/models/shared/taskmangopaystate.md
  - docs/models/shared/taskmodulr.md
  - docs/models/shared/taskmodulrdescriptor.md
  - docs/models/shared/taskmodulrstate.md
  - docs/models/shared/taskmoneycorp.md
  - docs/models/shared/taskmoneycorpdescriptor.md
  - docs/models/shared/taskmoneycorpstate.md
  - docs/models/shared/taskresponse.md
  - docs/models/shared/taskresponsedata.md
  - docs/models/shared/taskscursor.md
  - docs/models/shared/taskscursorcursor.md
  - docs/models/shared/taskscursordata.md
  - docs/models/shared/taskstripe.md
  - docs/models/shared/taskstripedescriptor.md
  - docs/models/shared/taskstripestate.md
  - docs/models/shared/taskwise.md
  - docs/models/shared/taskwisedescriptor.md
  - docs/models/shared/taskwisestate.md
  - docs/models/shared/total.md
  - docs/models/shared/transaction.md
  - docs/models/shared/transactiondata.md
  - docs/models/shared/transactionresponse.md
  - docs/models/shared/transactions.md
  - docs/models/shared/transactionscursorresponse.md
  - docs/models/shared/transactionscursorresponsecursor.md
  - docs/models/shared/transactionsresponse.md
  - docs/models/shared/transferinitiation.md
  - docs/models/shared/transferinitiationadjusments.md
  - docs/models/shared/transferinitiationpayments.md
  - docs/models/shared/transferinitiationrequest.md
  - docs/models/shared/transferinitiationrequesttype.md
  - docs/models/shared/transferinitiationresponse.md
  - docs/models/shared/transferinitiationscursor.md
  - docs/models/shared/transferinitiationscursorcursor.md
  - docs/models/shared/transferinitiationstatus.md
  - docs/models/shared/transferinitiationtype.md
  - docs/models/shared/transferrequest.md
  - docs/models/shared/transferresponse.md
  - docs/models/shared/trigger.md
  - docs/models/shared/triggerdata.md
  - docs/models/shared/triggeroccurrence.md
  - docs/models/shared/type.md
  - docs/models/shared/update.md
  - docs/models/shared/updateaccount.md
  - docs/models/shared/updatebankaccountmetadatarequest.md
  - docs/models/shared/updateclientrequest.md
  - docs/models/shared/updateclientresponse.md
  - docs/models/shared/updatetransferinitiationstatusrequest.md
  - docs/models/shared/user.md
  - docs/models/shared/v2account.md
  - docs/models/shared/v2accountresponse.md
  - docs/models/shared/v2accountscursorresponse.md
  - docs/models/shared/v2accountscursorresponsecursor.md
  - docs/models/shared/v2activityaddaccountmetadata.md
  - docs/models/shared/v2activityconfirmhold.md
  - docs/models/shared/v2activitycreatetransaction.md
  - docs/models/shared/v2activitycreatetransactionoutput.md
  - docs/models/shared/v2activitycreditwallet.md
  - docs/models/shared/v2activitydebitwallet.md
  - docs/models/shared/v2activitydebitwalletoutput.md
  - docs/models/shared/v2activitygetaccount.md
  - docs/models/shared/v2activitygetaccountoutput.md
  - docs/models/shared/v2activitygetpayment.md
  - docs/models/shared/v2activitygetpaymentoutput.md
  - docs/models/shared/v2activitygetwallet.md
  - docs/models/shared/v2activitygetwalletoutput.md
  - docs/models/shared/v2activitylistwallets.md
  - docs/models/shared/v2activitystripetransfer.md
  - docs/models/shared/v2activitystripetransfermetadata.md
  - docs/models/shared/v2activityvoidhold.md
  - docs/models/shared/v2aggregatebalancesresponse.md
  - docs/models/shared/v2assetholder.md
  - docs/models/shared/v2bulkelement.md
  - docs/models/shared/v2bulkelementaddmetadata.md
  - docs/models/shared/v2bulkelementaddmetadatadata.md
  - docs/models/shared/v2bulkelementcreatetransaction.md
  - docs/models/shared/v2bulkelementdeletemetadata.md
  - docs/models/shared/v2bulkelementdeletemetadatadata.md
  - docs/models/shared/v2bulkelementresult.md
  - docs/models/shared/v2bulkelementresultcreatetransactionschemas.md
  - docs/models/shared/v2bulkelementresultdeletemetadataschemas.md
  - docs/models/shared/v2bulkelementresulterrorschemas.md
  - docs/models/shared/v2bulkelementresultreverttransactionschemas.md
  - docs/models/shared/v2bulkelementreverttransaction.md
  - docs/models/shared/v2bulkelementreverttransactiondata.md
  - docs/models/shared/v2bulkresponse.md
  - docs/models/shared/v2configinforesponse.md
  - docs/models/shared/v2connector.md
  - docs/models/shared/v2createledgerrequest.md
  - docs/models/shared/v2createtransactionresponse.md
  - docs/models/shared/v2createtriggerresponse.md
  - docs/models/shared/v2createworkflowrequest.md
  - docs/models/shared/v2createworkflowresponse.md
  - docs/models/shared/v2creditwalletrequest.md
  - docs/models/shared/v2debitwalletrequest.md
  - docs/models/shared/v2errorresponse.md
  - docs/models/shared/v2errorsenum.md
  - docs/models/shared/v2expandedtransaction.md
  - docs/models/shared/v2getledgerresponse.md
  - docs/models/shared/v2gettransactionresponse.md
  - docs/models/shared/v2getworkflowinstancehistoryresponse.md
  - docs/models/shared/v2getworkflowinstancehistorystageresponse.md
  - docs/models/shared/v2getworkflowinstanceresponse.md
  - docs/models/shared/v2getworkflowresponse.md
  - docs/models/shared/v2hold.md
  - docs/models/shared/v2ledger.md
  - docs/models/shared/v2ledgeraccountsubject.md
  - docs/models/shared/v2ledgerinfo.md
  - docs/models/shared/v2ledgerinforesponse.md
  - docs/models/shared/v2ledgerinfostorage.md
  - docs/models/shared/v2ledgerlistresponse.md
  - docs/models/shared/v2ledgerlistresponsecursor.md
  - docs/models/shared/v2listrunsresponse.md
  - docs/models/shared/v2listrunsresponsecursor.md
  - docs/models/shared/v2listtriggersoccurrencesresponse.md
  - docs/models/shared/v2listtriggersoccurrencesresponsecursor.md
  - docs/models/shared/v2listtriggersresponse.md
  - docs/models/shared/v2listtriggersresponsecursor.md
  - docs/models/shared/v2listwalletsresponse.md
  - docs/models/shared/v2listwalletsresponsecursor.md
  - docs/models/shared/v2listworkflowsresponse.md
  - docs/models/shared/v2listworkflowsresponsecursor.md
  - docs/models/shared/v2log.md
  - docs/models/shared/v2logscursorresponse.md
  - docs/models/shared/v2logscursorresponsecursor.md
  - docs/models/shared/v2logtype.md
  - docs/models/shared/v2migrationinfo.md
  - docs/models/shared/v2migrationinfostate.md
  - docs/models/shared/v2monetary.md
  - docs/models/shared/v2payment.md
  - docs/models/shared/v2paymentadjustment.md
  - docs/models/shared/v2paymentadjustmentraw.md
  - docs/models/shared/v2paymentmetadata.md
  - docs/models/shared/v2paymentraw.md
  - docs/models/shared/v2paymentstatus.md
  - docs/models/shared/v2paymenttype.md
  - docs/models/shared/v2posting.md
  - docs/models/shared/v2posttransaction.md
  - docs/models/shared/v2posttransactionscript.md
  - docs/models/shared/v2readtriggerresponse.md
  - docs/models/shared/v2reverttransactionresponse.md
  - docs/models/shared/v2runworkflowresponse.md
  - docs/models/shared/v2serverinfo.md
  - docs/models/shared/v2stage.md
  - docs/models/shared/v2stagedelay.md
  - docs/models/shared/v2stagesend.md
  - docs/models/shared/v2stagesenddestination.md
  - docs/models/shared/v2stagesenddestinationaccount.md
  - docs/models/shared/v2stagesenddestinationpayment.md
  - docs/models/shared/v2stagesenddestinationwallet.md
  - docs/models/shared/v2stagesendsource.md
  - docs/models/shared/v2stagesendsourceaccount.md
  - docs/models/shared/v2stagesendsourcepayment.md
  - docs/models/shared/v2stagesendsourcewallet.md
  - docs/models/shared/v2stagestatus.md
  - docs/models/shared/v2stagewaitevent.md
  - docs/models/shared/v2stats.md
  - docs/models/shared/v2statsresponse.md
  - docs/models/shared/v2subject.md
  - docs/models/shared/v2targetid.md
  - docs/models/shared/v2targettype.md
  - docs/models/shared/v2testtriggerresponse.md
  - docs/models/shared/v2transaction.md
  - docs/models/shared/v2transactionscursorresponse.md
  - docs/models/shared/v2transactionscursorresponsecursor.md
  - docs/models/shared/v2trigger.md
  - docs/models/shared/v2triggerdata.md
  - docs/models/shared/v2triggeroccurrence.md
  - docs/models/shared/v2triggertest.md
  - docs/models/shared/v2update.md
  - docs/models/shared/v2updateaccount.md
  - docs/models/shared/v2volume.md
  - docs/models/shared/v2volumeswithbalance.md
  - docs/models/shared/v2volumeswithbalancecursorresponse.md
  - docs/models/shared/v2volumeswithbalancecursorresponsecursor.md
  - docs/models/shared/v2wallet.md
  - docs/models/shared/v2walletsubject.md
  - docs/models/shared/v2walletwithbalances.md
  - docs/models/shared/v2workflow.md
  - docs/models/shared/v2workflowconfig.md
  - docs/models/shared/v2workflowinstance.md
  - docs/models/shared/v2workflowinstancehistory.md
  - docs/models/shared/v2workflowinstancehistorystage.md
  - docs/models/shared/v2workflowinstancehistorystageinput.md
  - docs/models/shared/v2workflowinstancehistorystageoutput.md
  - docs/models/shared/variables.md
  - docs/models/shared/version.md
  - docs/models/shared/volume.md
  - docs/models/shared/wallet.md
  - docs/models/shared/walletbalances.md
  - docs/models/shared/walletstransaction.md
  - docs/models/shared/walletsubject.md
  - docs/models/shared/walletsvolume.md
  - docs/models/shared/walletwithbalances.md
  - docs/models/shared/walletwithbalancesbalances.md
  - docs/models/shared/webhooksconfig.md
  - docs/models/shared/webhookserrorsenum.md
  - docs/models/shared/wiseconfig.md
  - docs/models/shared/workflow.md
  - docs/models/shared/workflowconfig.md
  - docs/models/shared/workflowinstance.md
  - docs/models/shared/workflowinstancehistory.md
  - docs/models/shared/workflowinstancehistorystage.md
  - docs/models/shared/workflowinstancehistorystageinput.md
  - docs/models/shared/workflowinstancehistorystageoutput.md
  - docs/sdks/auth/README.md
  - docs/sdks/ledger/README.md
  - docs/sdks/orchestration/README.md
  - docs/sdks/payments/README.md
  - docs/sdks/reconciliation/README.md
  - docs/sdks/sdk/README.md
  - docs/sdks/sdkorchestrationv1/README.md
  - docs/sdks/sdkpaymentsv1/README.md
  - docs/sdks/sdkreconciliationv1/README.md
  - docs/sdks/sdksearchv1/README.md
  - docs/sdks/sdkv1/README.md
  - docs/sdks/sdkv2/README.md
  - docs/sdks/sdkwalletsv1/README.md
  - docs/sdks/sdkwebhooksv1/README.md
  - docs/sdks/search/README.md
  - docs/sdks/v1/README.md
  - docs/sdks/v2/README.md
  - docs/sdks/wallets/README.md
  - docs/sdks/webhooks/README.md
  - py.typed
  - pylintrc
  - scripts/publish.sh
  - setup.py
  - src/sdk/__init__.py
  - src/sdk/_hooks/__init__.py
  - src/sdk/_hooks/clientcredentials.py
  - src/sdk/_hooks/sdkhooks.py
  - src/sdk/_hooks/types.py
  - src/sdk/auth.py
  - src/sdk/ledger.py
  - src/sdk/models/__init__.py
  - src/sdk/models/errors/__init__.py
  - src/sdk/models/errors/error.py
  - src/sdk/models/errors/errorresponse.py
  - src/sdk/models/errors/paymentserrorresponse.py
  - src/sdk/models/errors/reconciliationerrorresponse.py
  - src/sdk/models/errors/sdkerror.py
  - src/sdk/models/errors/v2error.py
  - src/sdk/models/errors/v2errorresponse.py
  - src/sdk/models/errors/walletserrorresponse.py
  - src/sdk/models/errors/webhookserrorresponse.py
  - src/sdk/models/operations/__init__.py
  - src/sdk/models/operations/activateconfig.py
  - src/sdk/models/operations/addaccounttopool.py
  - src/sdk/models/operations/addmetadataontransaction.py
  - src/sdk/models/operations/addmetadatatoaccount.py
  - src/sdk/models/operations/cancelevent.py
  - src/sdk/models/operations/changeconfigsecret.py
  - src/sdk/models/operations/confirmhold.py
  - src/sdk/models/operations/connectorstransfer.py
  - src/sdk/models/operations/countaccounts.py
  - src/sdk/models/operations/counttransactions.py
  - src/sdk/models/operations/createaccount.py
  - src/sdk/models/operations/createbalance.py
  - src/sdk/models/operations/createbankaccount.py
  - src/sdk/models/operations/createclient.py
  - src/sdk/models/operations/createpayment.py
  - src/sdk/models/operations/createpolicy.py
  - src/sdk/models/operations/createpool.py
  - src/sdk/models/operations/createsecret.py
  - src/sdk/models/operations/createtransaction.py
  - src/sdk/models/operations/createtransactions.py
  - src/sdk/models/operations/createtransferinitiation.py
  - src/sdk/models/operations/createtrigger.py
  - src/sdk/models/operations/createwallet.py
  - src/sdk/models/operations/createworkflow.py
  - src/sdk/models/operations/creditwallet.py
  - src/sdk/models/operations/deactivateconfig.py
  - src/sdk/models/operations/debitwallet.py
  - src/sdk/models/operations/deleteclient.py
  - src/sdk/models/operations/deleteconfig.py
  - src/sdk/models/operations/deletepolicy.py
  - src/sdk/models/operations/deletepool.py
  - src/sdk/models/operations/deletesecret.py
  - src/sdk/models/operations/deletetransferinitiation.py
  - src/sdk/models/operations/deletetrigger.py
  - src/sdk/models/operations/deleteworkflow.py
  - src/sdk/models/operations/forwardbankaccount.py
  - src/sdk/models/operations/getaccount.py
  - src/sdk/models/operations/getaccountbalances.py
  - src/sdk/models/operations/getbalance.py
  - src/sdk/models/operations/getbalances.py
  - src/sdk/models/operations/getbalancesaggregated.py
  - src/sdk/models/operations/getbankaccount.py
  - src/sdk/models/operations/getconnectortask.py
  - src/sdk/models/operations/getconnectortaskv1.py
  - src/sdk/models/operations/gethold.py
  - src/sdk/models/operations/getholds.py
  - src/sdk/models/operations/getinfo.py
  - src/sdk/models/operations/getinstance.py
  - src/sdk/models/operations/getinstancehistory.py
  - src/sdk/models/operations/getinstancestagehistory.py
  - src/sdk/models/operations/getledgerinfo.py
  - src/sdk/models/operations/getmanyconfigs.py
  - src/sdk/models/operations/getmapping.py
  - src/sdk/models/operations/getoidcwellknowns.py
  - src/sdk/models/operations/getpayment.py
  - src/sdk/models/operations/getpolicy.py
  - src/sdk/models/operations/getpool.py
  - src/sdk/models/operations/getpoolbalances.py
  - src/sdk/models/operations/getreconciliation.py
  - src/sdk/models/operations/getserverinfo.py
  - src/sdk/models/operations/gettransaction.py
  - src/sdk/models/operations/gettransactions.py
  - src/sdk/models/operations/gettransferinitiation.py
  - src/sdk/models/operations/getversions.py
  - src/sdk/models/operations/getwallet.py
  - src/sdk/models/operations/getwalletsummary.py
  - src/sdk/models/operations/getworkflow.py
  - src/sdk/models/operations/insertconfig.py
  - src/sdk/models/operations/installconnector.py
  - src/sdk/models/operations/listaccounts.py
  - src/sdk/models/operations/listallconnectors.py
  - src/sdk/models/operations/listbalances.py
  - src/sdk/models/operations/listbankaccounts.py
  - src/sdk/models/operations/listclients.py
  - src/sdk/models/operations/listconfigsavailableconnectors.py
  - src/sdk/models/operations/listconnectortasks.py
  - src/sdk/models/operations/listconnectortasksv1.py
  - src/sdk/models/operations/listinstances.py
  - src/sdk/models/operations/listlogs.py
  - src/sdk/models/operations/listpayments.py
  - src/sdk/models/operations/listpolicies.py
  - src/sdk/models/operations/listpools.py
  - src/sdk/models/operations/listreconciliations.py
  - src/sdk/models/operations/listtransactions.py
  - src/sdk/models/operations/listtransferinitiations.py
  - src/sdk/models/operations/listtriggers.py
  - src/sdk/models/operations/listtriggersoccurrences.py
  - src/sdk/models/operations/listusers.py
  - src/sdk/models/operations/listwallets.py
  - src/sdk/models/operations/listworkflows.py
  - src/sdk/models/operations/orchestrationgetserverinfo.py
  - src/sdk/models/operations/paymentsgetaccount.py
  - src/sdk/models/operations/paymentsgetserverinfo.py
  - src/sdk/models/operations/paymentslistaccounts.py
  - src/sdk/models/operations/readclient.py
  - src/sdk/models/operations/readconnectorconfig.py
  - src/sdk/models/operations/readconnectorconfigv1.py
  - src/sdk/models/operations/readstats.py
  - src/sdk/models/operations/readtrigger.py
  - src/sdk/models/operations/readuser.py
  - src/sdk/models/operations/reconcile.py
  - src/sdk/models/operations/reconciliationgetserverinfo.py
  - src/sdk/models/operations/removeaccountfrompool.py
  - src/sdk/models/operations/resetconnector.py
  - src/sdk/models/operations/resetconnectorv1.py
  - src/sdk/models/operations/retrytransferinitiation.py
  - src/sdk/models/operations/reversetransferinitiation.py
  - src/sdk/models/operations/reverttransaction.py
  - src/sdk/models/operations/runscript.py
  - src/sdk/models/operations/runworkflow.py
  - src/sdk/models/operations/search.py
  - src/sdk/models/operations/searchgetserverinfo.py
  - src/sdk/models/operations/sendevent.py
  - src/sdk/models/operations/testconfig.py
  - src/sdk/models/operations/testtrigger.py
  - src/sdk/models/operations/udpatetransferinitiationstatus.py
  - src/sdk/models/operations/uninstallconnector.py
  - src/sdk/models/operations/uninstallconnectorv1.py
  - src/sdk/models/operations/updatebankaccountmetadata.py
  - src/sdk/models/operations/updateclient.py
  - src/sdk/models/operations/updateconnectorconfigv1.py
  - src/sdk/models/operations/updatemapping.py
  - src/sdk/models/operations/updatemetadata.py
  - src/sdk/models/operations/updatewallet.py
  - src/sdk/models/operations/v2addmetadataontransaction.py
  - src/sdk/models/operations/v2addmetadatatoaccount.py
  - src/sdk/models/operations/v2cancelevent.py
  - src/sdk/models/operations/v2countaccounts.py
  - src/sdk/models/operations/v2counttransactions.py
  - src/sdk/models/operations/v2createbulk.py
  - src/sdk/models/operations/v2createledger.py
  - src/sdk/models/operations/v2createtransaction.py
  - src/sdk/models/operations/v2createtrigger.py
  - src/sdk/models/operations/v2createworkflow.py
  - src/sdk/models/operations/v2deleteaccountmetadata.py
  - src/sdk/models/operations/v2deleteledgermetadata.py
  - src/sdk/models/operations/v2deletetransactionmetadata.py
  - src/sdk/models/operations/v2deletetrigger.py
  - src/sdk/models/operations/v2deleteworkflow.py
  - src/sdk/models/operations/v2exportlogs.py
  - src/sdk/models/operations/v2getaccount.py
  - src/sdk/models/operations/v2getbalancesaggregated.py
  - src/sdk/models/operations/v2getinfo.py
  - src/sdk/models/operations/v2getinstance.py
  - src/sdk/models/operations/v2getinstancehistory.py
  - src/sdk/models/operations/v2getinstancestagehistory.py
  - src/sdk/models/operations/v2getledger.py
  - src/sdk/models/operations/v2getledgerinfo.py
  - src/sdk/models/operations/v2getserverinfo.py
  - src/sdk/models/operations/v2gettransaction.py
  - src/sdk/models/operations/v2getvolumeswithbalances.py
  - src/sdk/models/operations/v2getworkflow.py
  - src/sdk/models/operations/v2importlogs.py
  - src/sdk/models/operations/v2listaccounts.py
  - src/sdk/models/operations/v2listinstances.py
  - src/sdk/models/operations/v2listledgers.py
  - src/sdk/models/operations/v2listlogs.py
  - src/sdk/models/operations/v2listtransactions.py
  - src/sdk/models/operations/v2listtriggers.py
  - src/sdk/models/operations/v2listtriggersoccurrences.py
  - src/sdk/models/operations/v2listworkflows.py
  - src/sdk/models/operations/v2readstats.py
  - src/sdk/models/operations/v2readtrigger.py
  - src/sdk/models/operations/v2reverttransaction.py
  - src/sdk/models/operations/v2runworkflow.py
  - src/sdk/models/operations/v2sendevent.py
  - src/sdk/models/operations/v2updateledgermetadata.py
  - src/sdk/models/operations/voidhold.py
  - src/sdk/models/operations/walletsgetserverinfo.py
  - src/sdk/models/shared/__init__.py
  - src/sdk/models/shared/account.py
  - src/sdk/models/shared/accountbalance.py
  - src/sdk/models/shared/accountrequest.py
  - src/sdk/models/shared/accountresponse.py
  - src/sdk/models/shared/accountscursor.py
  - src/sdk/models/shared/accountscursorresponse.py
  - src/sdk/models/shared/accounttype.py
  - src/sdk/models/shared/accountwithvolumesandbalances.py
  - src/sdk/models/shared/activityaddaccountmetadata.py
  - src/sdk/models/shared/activityconfirmhold.py
  - src/sdk/models/shared/activitycreatetransaction.py
  - src/sdk/models/shared/activitycreatetransactionoutput.py
  - src/sdk/models/shared/activitycreditwallet.py
  - src/sdk/models/shared/activitydebitwallet.py
  - src/sdk/models/shared/activitydebitwalletoutput.py
  - src/sdk/models/shared/activitygetaccount.py
  - src/sdk/models/shared/activitygetaccountoutput.py
  - src/sdk/models/shared/activitygetpayment.py
  - src/sdk/models/shared/activitygetpaymentoutput.py
  - src/sdk/models/shared/activitygetwallet.py
  - src/sdk/models/shared/activitygetwalletoutput.py
  - src/sdk/models/shared/activitylistwallets.py
  - src/sdk/models/shared/activityreverttransaction.py
  - src/sdk/models/shared/activityreverttransactionoutput.py
  - src/sdk/models/shared/activitystripetransfer.py
  - src/sdk/models/shared/activityvoidhold.py
  - src/sdk/models/shared/addaccounttopoolrequest.py
  - src/sdk/models/shared/adyenconfig.py
  - src/sdk/models/shared/aggregatebalancesresponse.py
  - src/sdk/models/shared/assetholder.py
  - src/sdk/models/shared/atlarconfig.py
  - src/sdk/models/shared/attempt.py
  - src/sdk/models/shared/attemptresponse.py
  - src/sdk/models/shared/balance.py
  - src/sdk/models/shared/balancescursor.py
  - src/sdk/models/shared/balancescursorresponse.py
  - src/sdk/models/shared/balancewithassets.py
  - src/sdk/models/shared/bankaccount.py
  - src/sdk/models/shared/bankaccountrelatedaccounts.py
  - src/sdk/models/shared/bankaccountrequest.py
  - src/sdk/models/shared/bankaccountresponse.py
  - src/sdk/models/shared/bankaccountscursor.py
  - src/sdk/models/shared/bankingcircleconfig.py
  - src/sdk/models/shared/client.py
  - src/sdk/models/shared/clientsecret.py
  - src/sdk/models/shared/config.py
  - src/sdk/models/shared/configchangesecret.py
  - src/sdk/models/shared/configinfo.py
  - src/sdk/models/shared/configinforesponse.py
  - src/sdk/models/shared/configresponse.py
  - src/sdk/models/shared/configsresponse.py
  - src/sdk/models/shared/configuser.py
  - src/sdk/models/shared/confirmholdrequest.py
  - src/sdk/models/shared/connector.py
  - src/sdk/models/shared/connectorconfig.py
  - src/sdk/models/shared/connectorconfigresponse.py
  - src/sdk/models/shared/connectorresponse.py
  - src/sdk/models/shared/connectorsconfigsresponse.py
  - src/sdk/models/shared/connectorsresponse.py
  - src/sdk/models/shared/contract.py
  - src/sdk/models/shared/createbalancerequest.py
  - src/sdk/models/shared/createbalanceresponse.py
  - src/sdk/models/shared/createclientrequest.py
  - src/sdk/models/shared/createclientresponse.py
  - src/sdk/models/shared/createsecretrequest.py
  - src/sdk/models/shared/createsecretresponse.py
  - src/sdk/models/shared/createtriggerresponse.py
  - src/sdk/models/shared/createwalletrequest.py
  - src/sdk/models/shared/createwalletresponse.py
  - src/sdk/models/shared/createworkflowrequest.py
  - src/sdk/models/shared/createworkflowresponse.py
  - src/sdk/models/shared/creditwalletrequest.py
  - src/sdk/models/shared/currencycloudconfig.py
  - src/sdk/models/shared/debitwalletrequest.py
  - src/sdk/models/shared/debitwalletresponse.py
  - src/sdk/models/shared/dummypayconfig.py
  - src/sdk/models/shared/errorresponse.py
  - src/sdk/models/shared/errorsenum.py
  - src/sdk/models/shared/expandeddebithold.py
  - src/sdk/models/shared/forwardbankaccountrequest.py
  - src/sdk/models/shared/genericconfig.py
  - src/sdk/models/shared/getbalanceresponse.py
  - src/sdk/models/shared/getholdresponse.py
  - src/sdk/models/shared/getholdsresponse.py
  - src/sdk/models/shared/gettransactionsresponse.py
  - src/sdk/models/shared/getversionsresponse.py
  - src/sdk/models/shared/getwalletresponse.py
  - src/sdk/models/shared/getwalletsummaryresponse.py
  - src/sdk/models/shared/getworkflowinstancehistoryresponse.py
  - src/sdk/models/shared/getworkflowinstancehistorystageresponse.py
  - src/sdk/models/shared/getworkflowinstanceresponse.py
  - src/sdk/models/shared/getworkflowresponse.py
  - src/sdk/models/shared/hold.py
  - src/sdk/models/shared/ledgeraccountsubject.py
  - src/sdk/models/shared/ledgerinfo.py
  - src/sdk/models/shared/ledgerinforesponse.py
  - src/sdk/models/shared/ledgerstorage.py
  - src/sdk/models/shared/listbalancesresponse.py
  - src/sdk/models/shared/listclientsresponse.py
  - src/sdk/models/shared/listrunsresponse.py
  - src/sdk/models/shared/listtriggersoccurrencesresponse.py
  - src/sdk/models/shared/listtriggersresponse.py
  - src/sdk/models/shared/listusersresponse.py
  - src/sdk/models/shared/listwalletsresponse.py
  - src/sdk/models/shared/listworkflowsresponse.py
  - src/sdk/models/shared/log.py
  - src/sdk/models/shared/logscursorresponse.py
  - src/sdk/models/shared/mangopayconfig.py
  - src/sdk/models/shared/mapping.py
  - src/sdk/models/shared/mappingresponse.py
  - src/sdk/models/shared/migrationinfo.py
  - src/sdk/models/shared/modulrconfig.py
  - src/sdk/models/shared/monetary.py
  - src/sdk/models/shared/moneycorpconfig.py
  - src/sdk/models/shared/orchestrationaccount.py
  - src/sdk/models/shared/orchestrationconnector.py
  - src/sdk/models/shared/orchestrationcreditwalletrequest.py
  - src/sdk/models/shared/orchestrationlistwalletsresponse.py
  - src/sdk/models/shared/orchestrationpayment.py
  - src/sdk/models/shared/orchestrationpaymentadjustment.py
  - src/sdk/models/shared/orchestrationpaymentmetadata.py
  - src/sdk/models/shared/orchestrationpaymentstatus.py
  - src/sdk/models/shared/orchestrationposttransaction.py
  - src/sdk/models/shared/orchestrationtransaction.py
  - src/sdk/models/shared/orchestrationv2transaction.py
  - src/sdk/models/shared/orchestrationwallet.py
  - src/sdk/models/shared/payment.py
  - src/sdk/models/shared/paymentadjustment.py
  - src/sdk/models/shared/paymentrequest.py
  - src/sdk/models/shared/paymentresponse.py
  - src/sdk/models/shared/paymentsaccount.py
  - src/sdk/models/shared/paymentsaccountresponse.py
  - src/sdk/models/shared/paymentscheme.py
  - src/sdk/models/shared/paymentscursor.py
  - src/sdk/models/shared/paymentserrorsenum.py
  - src/sdk/models/shared/paymentstatus.py
  - src/sdk/models/shared/paymenttype.py
  - src/sdk/models/shared/policiescursorresponse.py
  - src/sdk/models/shared/policy.py
  - src/sdk/models/shared/policyrequest.py
  - src/sdk/models/shared/policyresponse.py
  - src/sdk/models/shared/pool.py
  - src/sdk/models/shared/poolbalance.py
  - src/sdk/models/shared/poolbalances.py
  - src/sdk/models/shared/poolbalancesresponse.py
  - src/sdk/models/shared/poolrequest.py
  - src/sdk/models/shared/poolresponse.py
  - src/sdk/models/shared/poolscursor.py
  - src/sdk/models/shared/posting.py
  - src/sdk/models/shared/posttransaction.py
  - src/sdk/models/shared/query.py
  - src/sdk/models/shared/readclientresponse.py
  - src/sdk/models/shared/readtriggerresponse.py
  - src/sdk/models/shared/readuserresponse.py
  - src/sdk/models/shared/reconciliation.py
  - src/sdk/models/shared/reconciliationrequest.py
  - src/sdk/models/shared/reconciliationresponse.py
  - src/sdk/models/shared/reconciliationscursorresponse.py
  - src/sdk/models/shared/response.py
  - src/sdk/models/shared/reversetransferinitiationrequest.py
  - src/sdk/models/shared/runworkflowresponse.py
  - src/sdk/models/shared/script.py
  - src/sdk/models/shared/scriptresponse.py
  - src/sdk/models/shared/secret.py
  - src/sdk/models/shared/security.py
  - src/sdk/models/shared/serverinfo.py
  - src/sdk/models/shared/stage.py
  - src/sdk/models/shared/stagedelay.py
  - src/sdk/models/shared/stagesend.py
  - src/sdk/models/shared/stagesenddestination.py
  - src/sdk/models/shared/stagesenddestinationaccount.py
  - src/sdk/models/shared/stagesenddestinationpayment.py
  - src/sdk/models/shared/stagesenddestinationwallet.py
  - src/sdk/models/shared/stagesendsource.py
  - src/sdk/models/shared/stagesendsourceaccount.py
  - src/sdk/models/shared/stagesendsourcepayment.py
  - src/sdk/models/shared/stagesendsourcewallet.py
  - src/sdk/models/shared/stagestatus.py
  - src/sdk/models/shared/stagewaitevent.py
  - src/sdk/models/shared/stats.py
  - src/sdk/models/shared/statsresponse.py
  - src/sdk/models/shared/stripeconfig.py
  - src/sdk/models/shared/subject.py
  - src/sdk/models/shared/taskbankingcircle.py
  - src/sdk/models/shared/taskcurrencycloud.py
  - src/sdk/models/shared/taskdummypay.py
  - src/sdk/models/shared/taskmangopay.py
  - src/sdk/models/shared/taskmodulr.py
  - src/sdk/models/shared/taskmoneycorp.py
  - src/sdk/models/shared/taskresponse.py
  - src/sdk/models/shared/taskscursor.py
  - src/sdk/models/shared/taskstripe.py
  - src/sdk/models/shared/taskwise.py
  - src/sdk/models/shared/transaction.py
  - src/sdk/models/shared/transactiondata.py
  - src/sdk/models/shared/transactionresponse.py
  - src/sdk/models/shared/transactions.py
  - src/sdk/models/shared/transactionscursorresponse.py
  - src/sdk/models/shared/transactionsresponse.py
  - src/sdk/models/shared/transferinitiation.py
  - src/sdk/models/shared/transferinitiationadjusments.py
  - src/sdk/models/shared/transferinitiationpayments.py
  - src/sdk/models/shared/transferinitiationrequest.py
  - src/sdk/models/shared/transferinitiationresponse.py
  - src/sdk/models/shared/transferinitiationscursor.py
  - src/sdk/models/shared/transferinitiationstatus.py
  - src/sdk/models/shared/transferrequest.py
  - src/sdk/models/shared/transferresponse.py
  - src/sdk/models/shared/trigger.py
  - src/sdk/models/shared/triggerdata.py
  - src/sdk/models/shared/triggeroccurrence.py
  - src/sdk/models/shared/update.py
  - src/sdk/models/shared/updateaccount.py
  - src/sdk/models/shared/updatebankaccountmetadatarequest.py
  - src/sdk/models/shared/updateclientrequest.py
  - src/sdk/models/shared/updateclientresponse.py
  - src/sdk/models/shared/updatetransferinitiationstatusrequest.py
  - src/sdk/models/shared/user.py
  - src/sdk/models/shared/v2account.py
  - src/sdk/models/shared/v2accountresponse.py
  - src/sdk/models/shared/v2accountscursorresponse.py
  - src/sdk/models/shared/v2activityaddaccountmetadata.py
  - src/sdk/models/shared/v2activityconfirmhold.py
  - src/sdk/models/shared/v2activitycreatetransaction.py
  - src/sdk/models/shared/v2activitycreatetransactionoutput.py
  - src/sdk/models/shared/v2activitycreditwallet.py
  - src/sdk/models/shared/v2activitydebitwallet.py
  - src/sdk/models/shared/v2activitydebitwalletoutput.py
  - src/sdk/models/shared/v2activitygetaccount.py
  - src/sdk/models/shared/v2activitygetaccountoutput.py
  - src/sdk/models/shared/v2activitygetpayment.py
  - src/sdk/models/shared/v2activitygetpaymentoutput.py
  - src/sdk/models/shared/v2activitygetwallet.py
  - src/sdk/models/shared/v2activitygetwalletoutput.py
  - src/sdk/models/shared/v2activitylistwallets.py
  - src/sdk/models/shared/v2activitystripetransfer.py
  - src/sdk/models/shared/v2activityvoidhold.py
  - src/sdk/models/shared/v2aggregatebalancesresponse.py
  - src/sdk/models/shared/v2assetholder.py
  - src/sdk/models/shared/v2bulkelement.py
  - src/sdk/models/shared/v2bulkelementaddmetadata.py
  - src/sdk/models/shared/v2bulkelementcreatetransaction.py
  - src/sdk/models/shared/v2bulkelementdeletemetadata.py
  - src/sdk/models/shared/v2bulkelementresult.py
  - src/sdk/models/shared/v2bulkelementreverttransaction.py
  - src/sdk/models/shared/v2bulkresponse.py
  - src/sdk/models/shared/v2configinforesponse.py
  - src/sdk/models/shared/v2connector.py
  - src/sdk/models/shared/v2createledgerrequest.py
  - src/sdk/models/shared/v2createtransactionresponse.py
  - src/sdk/models/shared/v2createtriggerresponse.py
  - src/sdk/models/shared/v2createworkflowrequest.py
  - src/sdk/models/shared/v2createworkflowresponse.py
  - src/sdk/models/shared/v2creditwalletrequest.py
  - src/sdk/models/shared/v2debitwalletrequest.py
  - src/sdk/models/shared/v2errorresponse.py
  - src/sdk/models/shared/v2errorsenum.py
  - src/sdk/models/shared/v2expandedtransaction.py
  - src/sdk/models/shared/v2getledgerresponse.py
  - src/sdk/models/shared/v2gettransactionresponse.py
  - src/sdk/models/shared/v2getworkflowinstancehistoryresponse.py
  - src/sdk/models/shared/v2getworkflowinstancehistorystageresponse.py
  - src/sdk/models/shared/v2getworkflowinstanceresponse.py
  - src/sdk/models/shared/v2getworkflowresponse.py
  - src/sdk/models/shared/v2hold.py
  - src/sdk/models/shared/v2ledger.py
  - src/sdk/models/shared/v2ledgeraccountsubject.py
  - src/sdk/models/shared/v2ledgerinfo.py
  - src/sdk/models/shared/v2ledgerinforesponse.py
  - src/sdk/models/shared/v2ledgerlistresponse.py
  - src/sdk/models/shared/v2listrunsresponse.py
  - src/sdk/models/shared/v2listtriggersoccurrencesresponse.py
  - src/sdk/models/shared/v2listtriggersresponse.py
  - src/sdk/models/shared/v2listwalletsresponse.py
  - src/sdk/models/shared/v2listworkflowsresponse.py
  - src/sdk/models/shared/v2log.py
  - src/sdk/models/shared/v2logscursorresponse.py
  - src/sdk/models/shared/v2migrationinfo.py
  - src/sdk/models/shared/v2monetary.py
  - src/sdk/models/shared/v2payment.py
  - src/sdk/models/shared/v2paymentadjustment.py
  - src/sdk/models/shared/v2paymentmetadata.py
  - src/sdk/models/shared/v2paymentstatus.py
  - src/sdk/models/shared/v2posting.py
  - src/sdk/models/shared/v2posttransaction.py
  - src/sdk/models/shared/v2readtriggerresponse.py
  - src/sdk/models/shared/v2reverttransactionresponse.py
  - src/sdk/models/shared/v2runworkflowresponse.py
  - src/sdk/models/shared/v2serverinfo.py
  - src/sdk/models/shared/v2stage.py
  - src/sdk/models/shared/v2stagedelay.py
  - src/sdk/models/shared/v2stagesend.py
  - src/sdk/models/shared/v2stagesenddestination.py
  - src/sdk/models/shared/v2stagesenddestinationaccount.py
  - src/sdk/models/shared/v2stagesenddestinationpayment.py
  - src/sdk/models/shared/v2stagesenddestinationwallet.py
  - src/sdk/models/shared/v2stagesendsource.py
  - src/sdk/models/shared/v2stagesendsourceaccount.py
  - src/sdk/models/shared/v2stagesendsourcepayment.py
  - src/sdk/models/shared/v2stagesendsourcewallet.py
  - src/sdk/models/shared/v2stagestatus.py
  - src/sdk/models/shared/v2stagewaitevent.py
  - src/sdk/models/shared/v2stats.py
  - src/sdk/models/shared/v2statsresponse.py
  - src/sdk/models/shared/v2subject.py
  - src/sdk/models/shared/v2targetid.py
  - src/sdk/models/shared/v2targettype.py
  - src/sdk/models/shared/v2testtriggerresponse.py
  - src/sdk/models/shared/v2transaction.py
  - src/sdk/models/shared/v2transactionscursorresponse.py
  - src/sdk/models/shared/v2trigger.py
  - src/sdk/models/shared/v2triggerdata.py
  - src/sdk/models/shared/v2triggeroccurrence.py
  - src/sdk/models/shared/v2triggertest.py
  - src/sdk/models/shared/v2update.py
  - src/sdk/models/shared/v2updateaccount.py
  - src/sdk/models/shared/v2volume.py
  - src/sdk/models/shared/v2volumeswithbalance.py
  - src/sdk/models/shared/v2volumeswithbalancecursorresponse.py
  - src/sdk/models/shared/v2wallet.py
  - src/sdk/models/shared/v2walletsubject.py
  - src/sdk/models/shared/v2walletwithbalances.py
  - src/sdk/models/shared/v2workflow.py
  - src/sdk/models/shared/v2workflowconfig.py
  - src/sdk/models/shared/v2workflowinstance.py
  - src/sdk/models/shared/v2workflowinstancehistory.py
  - src/sdk/models/shared/v2workflowinstancehistorystage.py
  - src/sdk/models/shared/v2workflowinstancehistorystageinput.py
  - src/sdk/models/shared/v2workflowinstancehistorystageoutput.py
  - src/sdk/models/shared/version.py
  - src/sdk/models/shared/volume.py
  - src/sdk/models/shared/wallet.py
  - src/sdk/models/shared/walletstransaction.py
  - src/sdk/models/shared/walletsubject.py
  - src/sdk/models/shared/walletsvolume.py
  - src/sdk/models/shared/walletwithbalances.py
  - src/sdk/models/shared/webhooksconfig.py
  - src/sdk/models/shared/webhookserrorsenum.py
  - src/sdk/models/shared/wiseconfig.py
  - src/sdk/models/shared/workflow.py
  - src/sdk/models/shared/workflowconfig.py
  - src/sdk/models/shared/workflowinstance.py
  - src/sdk/models/shared/workflowinstancehistory.py
  - src/sdk/models/shared/workflowinstancehistorystage.py
  - src/sdk/models/shared/workflowinstancehistorystageinput.py
  - src/sdk/models/shared/workflowinstancehistorystageoutput.py
  - src/sdk/orchestration.py
  - src/sdk/payments.py
  - src/sdk/reconciliation.py
  - src/sdk/sdk.py
  - src/sdk/sdk_orchestration_v1.py
  - src/sdk/sdk_payments_v1.py
  - src/sdk/sdk_reconciliation_v1.py
  - src/sdk/sdk_search_v1.py
  - src/sdk/sdk_v1.py
  - src/sdk/sdk_v2.py
  - src/sdk/sdk_wallets_v1.py
  - src/sdk/sdk_webhooks_v1.py
  - src/sdk/sdkconfiguration.py
  - src/sdk/search.py
  - src/sdk/utils/__init__.py
  - src/sdk/utils/retries.py
  - src/sdk/utils/utils.py
  - src/sdk/v1.py
  - src/sdk/v2.py
  - src/sdk/wallets.py
  - src/sdk/webhooks.py
examples:
  getOIDCWellKnowns: {}
  getVersions:
    speakeasy-default-get-versions:
      responses:
        "200":
          application/json: {"env": "<value>", "region": "<value>", "versions": [{"health": true, "name": "<value>", "version": "<value>"}]}
  createClient: {}
  createSecret:
    speakeasy-default-create-secret:
      parameters:
        path:
          clientId: "<value>"
  deleteClient:
    speakeasy-default-delete-client:
      parameters:
        path:
          clientId: "<value>"
  deleteSecret:
    speakeasy-default-delete-secret:
      parameters:
        path:
          clientId: "<value>"
          secretId: "<value>"
  listClients: {}
  listUsers:
    speakeasy-default-list-users:
      responses:
        "200":
          application/json: {"data": [{"email": "user1@orga1.com", "id": "3bb03708-312f-48a0-821a-e765837dc2c4", "subject": "Jane Doe"}, {"email": "user1@orga1.com", "id": "3bb03708-312f-48a0-821a-e765837dc2c4", "subject": "Jane Doe"}]}
  readClient:
    speakeasy-default-read-client:
      parameters:
        path:
          clientId: "<value>"
  readUser:
    speakeasy-default-read-user:
      parameters:
        path:
          userId: "<value>"
      responses:
        "200":
          application/json: {"data": {"email": "user1@orga1.com", "id": "3bb03708-312f-48a0-821a-e765837dc2c4", "subject": "Jane Doe"}}
  updateClient:
    speakeasy-default-update-client:
      parameters:
        path:
          clientId: "<value>"
  CreateTransactions:
    speakeasy-default-create-transactions:
      parameters:
        path:
          ledger: "ledger001"
      requestBody:
        application/json: {"transactions": [{"postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001"}]}
      responses:
        "200":
          application/json: {"data": [{"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2023-03-06T12:58:17.302Z", "txid": 969224}, {"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2022-01-13T12:20:33.284Z", "txid": 808159}, {"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2024-12-27T01:08:16.828Z", "txid": 117566}]}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  addMetadataOnTransaction:
    speakeasy-default-add-metadata-on-transaction:
      parameters:
        path:
          ledger: "ledger001"
          txid: 1234
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  addMetadataToAccount:
    speakeasy-default-add-metadata-to-account:
      parameters:
        path:
          ledger: "ledger001"
          address: "users:001"
      requestBody:
        application/json: {}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  countAccounts:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          address: "users:.+"
          metadata: {"0": "m", "1": "e", "2": "t", "3": "a", "4": "d", "5": "a", "6": "t", "7": "a", "8": "[", "9": "k", "10": "e", "11": "y", "12": "]", "13": "=", "14": "v", "15": "a", "16": "l", "17": "u", "18": "e", "19": "1", "20": "&", "21": "m", "22": "e", "23": "t", "24": "a", "25": "d", "26": "a", "27": "t", "28": "a", "29": "[", "30": "a", "31": ".", "32": "n", "33": "e", "34": "s", "35": "t", "36": "e", "37": "d", "38": ".", "39": "k", "40": "e", "41": "y", "42": "]", "43": "=", "44": "v", "45": "a", "46": "l", "47": "u", "48": "e", "49": "2"}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  countTransactions:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          reference: "ref:001"
          account: "users:001"
          source: "users:001"
          destination: "users:001"
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  createTransaction:
    speakeasy-default-create-transaction:
      parameters:
        path:
          ledger: "ledger001"
        query:
          preview: true
      requestBody:
        application/json: {"postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "script": {"plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n", "vars": {"user": "users:042"}}}
      responses:
        "200":
          application/json: {"data": [{"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2024-10-22T08:35:30.999Z", "txid": 339139}, {"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2022-04-14T18:14:42.519Z", "txid": 159068}, {"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2024-12-15T14:36:30.627Z", "txid": 992364}]}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  getAccount:
    speakeasy-default-get-account:
      parameters:
        path:
          ledger: "ledger001"
          address: "users:001"
      responses:
        "200":
          application/json: {"data": {"address": "users:001", "balances": {"COIN": 100}, "metadata": {"admin": true, "a": {"nested": {"key": "value"}}}, "type": "virtual", "volumes": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  getBalances:
    speakeasy-default-get-balances:
      parameters:
        path:
          ledger: "ledger001"
        query:
          address: "users:001"
          after: "users:003"
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"account1": {"USD": 100, "EUR": 23}, "account2": {"CAD": 20, "JPY": 21}}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  getBalancesAggregated:
    speakeasy-default-get-balances-aggregated:
      parameters:
        path:
          ledger: "ledger001"
        query:
          address: "users:001"
      responses:
        "200":
          application/json: {"data": {"USD": 100, "EUR": 12}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  getInfo:
    speakeasy-default-get-info:
      responses:
        "200":
          application/json: {"data": {"config": {"storage": {"driver": "<value>", "ledgers": ["<value>", "<value>"]}}, "server": "<value>", "version": "<value>"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  getLedgerInfo:
    speakeasy-default-get-ledger-info:
      parameters:
        path:
          ledger: "ledger001"
      responses:
        "200":
          application/json: {"data": {"name": "ledger001", "storage": {"migrations": []}}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  getMapping:
    speakeasy-default-get-mapping:
      parameters:
        path:
          ledger: "ledger001"
      responses:
        "200":
          application/json: {"data": {"contracts": []}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  getTransaction:
    speakeasy-default-get-transaction:
      parameters:
        path:
          ledger: "ledger001"
          txid: 1234
      responses:
        "200":
          application/json: {"data": {"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2023-01-23T03:49:23.782Z", "txid": 921043}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  listAccounts:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          pageSize: 100
          after: "users:003"
          address: "users:.+"
          metadata: {"0": "m", "1": "e", "2": "t", "3": "a", "4": "d", "5": "a", "6": "t", "7": "a", "8": "[", "9": "k", "10": "e", "11": "y", "12": "]", "13": "=", "14": "v", "15": "a", "16": "l", "17": "u", "18": "e", "19": "1", "20": "&", "21": "m", "22": "e", "23": "t", "24": "a", "25": "d", "26": "a", "27": "t", "28": "a", "29": "[", "30": "a", "31": ".", "32": "n", "33": "e", "34": "s", "35": "t", "36": "e", "37": "d", "38": ".", "39": "k", "40": "e", "41": "y", "42": "]", "43": "=", "44": "v", "45": "a", "46": "l", "47": "u", "48": "e", "49": "2"}
          balance: 2400
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          pagination_token: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"address": "users:001", "metadata": {"admin": true, "a": {"nested": {"key": "value"}}}, "type": "virtual"}, {"address": "users:001", "metadata": {"admin": true, "a": {"nested": {"key": "value"}}}, "type": "virtual"}, {"address": "users:001", "metadata": {"admin": true, "a": {"nested": {"key": "value"}}}, "type": "virtual"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        "404":
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  listLogs:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          pageSize: 100
          after: "1234"
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"data": {"key": "<value>"}, "date": "2022-01-03T01:52:56.946Z", "hash": "9ee060170400f556b7e1575cb13f9db004f150a08355c7431c62bc639166431e", "id": 1234, "type": "SET_METADATA"}, {"data": {"key": "<value>"}, "date": "2024-08-25T01:03:57.835Z", "hash": "9ee060170400f556b7e1575cb13f9db004f150a08355c7431c62bc639166431e", "id": 1234, "type": "NEW_TRANSACTION"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  listTransactions:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          pageSize: 100
          after: "1234"
          reference: "ref:001"
          account: "users:001"
          source: "users:001"
          destination: "users:001"
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"postCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "reference": "ref:001", "timestamp": "2022-03-19T19:47:16.768Z", "txid": 533792}, {"postCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "reference": "ref:001", "timestamp": "2024-01-30T15:40:15.458Z", "txid": 711700}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  readStats:
    speakeasy-default-read-stats:
      parameters:
        path:
          ledger: "ledger001"
      responses:
        "200":
          application/json: {"data": {"accounts": 939446, "transactions": 895732}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  revertTransaction:
    speakeasy-default-revert-transaction:
      parameters:
        path:
          ledger: "ledger001"
          txid: 1234
        query: {}
      responses:
        "201":
          application/json: {"data": {"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2023-09-06T21:38:55.965Z", "txid": 107968}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  runScript:
    speakeasy-default-run-script:
      parameters:
        path:
          ledger: "ledger001"
        query:
          preview: true
      requestBody:
        application/json: {"plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n", "reference": "order_1234", "vars": {"user": "users:042"}}
      responses:
        "200":
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "account had insufficient funds", "transaction": {"postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "timestamp": "2023-11-05T15:22:00.380Z", "txid": 737293}}
  updateMapping:
    speakeasy-default-update-mapping:
      parameters:
        path:
          ledger: "ledger001"
      requestBody:
        application/json: {"contracts": [{"account": "users:001"}, {"account": "users:001"}]}
      responses:
        "200":
          application/json: {"data": {"contracts": [{"account": "users:001"}, {"account": "users:001"}]}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "INSUFFICIENT_FUND", "errorMessage": "[INSUFFICIENT_FUND] account had insufficient funds"}
  v2AddMetadataOnTransaction:
    speakeasy-default-v2-add-metadata-on-transaction:
      parameters:
        path:
          ledger: "ledger001"
          id: 1234
        query:
          dryRun: true
        header: {}
      requestBody:
        application/json: {"admin": "true"}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2AddMetadataToAccount:
    speakeasy-default-v2-add-metadata-to-account:
      parameters:
        path:
          ledger: "ledger001"
          address: "users:001"
        query:
          dryRun: true
        header: {}
      requestBody:
        application/json: {"admin": "true"}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2CountAccounts:
    speakeasy-default-v2-count-accounts:
      parameters:
        path:
          ledger: "ledger001"
        query: {}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2CountTransactions:
    speakeasy-default-v2-count-transactions:
      parameters:
        path:
          ledger: "ledger001"
        query: {}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2CreateBulk:
    speakeasy-default-v2-create-bulk:
      parameters:
        path:
          ledger: "ledger001"
      requestBody:
        application/json: []
      responses:
        "200":
          application/json: {"data": [{"data": {"id": 675402, "metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "reverted": true, "timestamp": "2023-12-06T13:18:01.588Z"}, "responseType": "<value>"}, {"responseType": "<value>"}]}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2CreateLedger:
    speakeasy-default-v2-create-ledger:
      parameters:
        path:
          ledger: "ledger001"
      requestBody:
        application/json: {"metadata": {"admin": "true"}}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2CreateTransaction:
    speakeasy-default-v2-create-transaction:
      parameters:
        path:
          ledger: "ledger001"
        query:
          dryRun: true
        header: {}
      requestBody:
        application/json: {"metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "script": {"plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n", "vars": {"user": "users:042"}}}
      responses:
        "200":
          application/json: {"data": {"id": 958773, "metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "reverted": true, "timestamp": "2022-05-16T13:36:21.180Z"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2DeleteAccountMetadata:
    speakeasy-default-v2-delete-account-metadata:
      parameters:
        path:
          ledger: "ledger001"
          address: "6032 Larkin Prairie"
          key: "foo"
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2DeleteLedgerMetadata:
    speakeasy-default-v2-delete-ledger-metadata:
      parameters:
        path:
          ledger: "ledger001"
          key: "foo"
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2DeleteTransactionMetadata:
    speakeasy-default-v2-delete-transaction-metadata:
      parameters:
        path:
          ledger: "ledger001"
          id: 1234
          key: "foo"
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2GetAccount:
    speakeasy-default-v2-get-account:
      parameters:
        path:
          ledger: "ledger001"
          address: "users:001"
        query: {}
      responses:
        "200":
          application/json: {"data": {"address": "users:001", "effectiveVolumes": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "metadata": {"admin": "true"}, "volumes": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2GetBalancesAggregated:
    speakeasy-default-v2-get-balances-aggregated:
      parameters:
        path:
          ledger: "ledger001"
        query: {}
      responses:
        "200":
          application/json: {"data": {"USD": 100, "EUR": 12}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2GetInfo:
    speakeasy-default-v2-get-info:
      responses:
        "200":
          application/json: {"server": "<value>", "version": "<value>"}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
        5XX:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2GetLedger:
    speakeasy-default-v2-get-ledger:
      parameters:
        path:
          ledger: "ledger001"
      responses:
        "200":
          application/json: {"data": {"addedAt": "2023-11-18T12:48:23.193Z", "bucket": "<value>", "metadata": {"admin": "true"}, "name": "<value>"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2GetLedgerInfo:
    speakeasy-default-v2-get-ledger-info:
      parameters:
        path:
          ledger: "ledger001"
      responses:
        "200":
          application/json: {"data": {"name": "ledger001", "storage": {"migrations": []}}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2GetTransaction:
    speakeasy-default-v2-get-transaction:
      parameters:
        path:
          ledger: "ledger001"
          id: 1234
        query: {}
      responses:
        "200":
          application/json: {"data": {"id": 425550, "metadata": {"admin": "true"}, "postCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "postings": [], "preCommitVolumes": {"orders:1": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}, "orders:2": {"USD": {"balance": 80, "input": 100, "output": 20}, "EUR": {"balance": 80, "input": 100, "output": 20}}}, "reference": "ref:001", "reverted": false, "timestamp": "2022-04-17T00:49:49.334Z"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2GetVolumesWithBalances:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          groupBy: 3
      responses:
        "200":
          application/json: {"cursor": {"data": [{"account": "60027266", "asset": "<value>", "balance": 81966, "input": 732692, "output": 556436}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2ListAccounts:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2ListLedgers:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"addedAt": "2022-01-16T00:34:46.578Z", "bucket": "<value>", "metadata": {"admin": "true"}, "name": "<value>"}, {"addedAt": "2022-05-12T08:44:48.936Z", "bucket": "<value>", "metadata": {"admin": "true"}, "name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2ListLogs:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"data": {"key": "<value>", "key1": "<value>"}, "date": "2023-12-01T16:09:31.908Z", "hash": "9ee060170400f556b7e1575cb13f9db004f150a08355c7431c62bc639166431e", "id": 1234, "type": "NEW_TRANSACTION"}, {"data": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "date": "2022-08-30T04:43:30.606Z", "hash": "9ee060170400f556b7e1575cb13f9db004f150a08355c7431c62bc639166431e", "id": 1234, "type": "NEW_TRANSACTION"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2ListTransactions:
    "":
      parameters:
        path:
          ledger: "ledger001"
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"id": 167393, "metadata": {"admin": "true"}, "postCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "postings": [], "preCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "reference": "ref:001", "reverted": true, "timestamp": "2023-10-28T21:37:23.611Z"}, {"id": 394350, "metadata": {"admin": "true"}, "postCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {"orders:1": {"USD": {"balance": 90, "input": 100, "output": 10}}, "orders:2": {"USD": {"balance": 90, "input": 100, "output": 10}}}, "reference": "ref:001", "reverted": false, "timestamp": "2024-09-01T03:22:45.704Z"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2ReadStats:
    speakeasy-default-v2-read-stats:
      parameters:
        path:
          ledger: "ledger001"
      responses:
        "200":
          application/json: {"data": {"accounts": 477489, "transactions": 941197}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2RevertTransaction:
    speakeasy-default-v2-revert-transaction:
      parameters:
        path:
          ledger: "ledger001"
          id: 1234
        query: {}
      responses:
        "201":
          application/json: {"data": {"id": 0, "metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "reverted": true, "timestamp": "2023-02-09T02:41:05.617Z"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  v2UpdateLedgerMetadata:
    speakeasy-default-v2-update-ledger-metadata:
      parameters:
        path:
          ledger: "ledger001"
      requestBody:
        application/json: {"admin": "true"}
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
        5XX:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  cancelEvent:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  createTrigger:
    speakeasy-default-create-trigger:
      responses:
        "201":
          application/json: {"data": {"createdAt": "2023-01-13T03:40:57.557Z", "event": "<value>", "id": "<id>", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  createWorkflow:
    speakeasy-default-create-workflow:
      responses:
        "201":
          application/json: {"data": {"config": {"stages": [{}, {"key": "<value>", "key1": "<value>"}, {}]}, "createdAt": "2024-08-28T15:20:54.999Z", "id": "<id>", "updatedAt": "2023-01-22T19:31:50.523Z"}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  deleteTrigger:
    speakeasy-default-delete-trigger:
      parameters:
        path:
          triggerID: "<value>"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  deleteWorkflow:
    "":
      parameters:
        path:
          flowId: "xxx"
      responses:
        default:
          application/json: {"errorCode": "INTERNAL", "errorMessage": "<value>"}
  getInstance:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        "200":
          application/json: {"data": {"createdAt": "2024-12-22T05:06:37.217Z", "id": "<id>", "terminated": true, "updatedAt": "2022-04-26T16:05:05.917Z", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  getInstanceHistory:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        "200":
          application/json: {"data": []}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  getInstanceStageHistory:
    "":
      parameters:
        path:
          instanceID: "xxx"
          number: 0
      responses:
        "200":
          application/json: {"data": [{"attempt": 1195, "input": {"CreateTransaction": {"data": {"metadata": {"admin": "true"}, "postings": [], "reference": "ref:001", "script": {"plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n", "vars": {"user": "users:042"}}}}, "CreditWallet": {"data": {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "sources": []}}, "DebitWallet": {"data": {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "pending": true}}, "StripeTransfer": {"amount": 100, "asset": "USD", "destination": "acct_1Gqj58KZcSIg2N2q", "waitingValidation": false}}, "name": "<value>", "output": {"CreateTransaction": {"data": {"id": 789895, "metadata": {"admin": "true"}, "postings": [], "reference": "ref:001", "reverted": true, "timestamp": "2022-08-06T02:20:05.010Z"}}, "GetAccount": {"data": {"address": "users:001", "effectiveVolumes": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}, "metadata": {"admin": "true"}, "volumes": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}}}, "GetPayment": {"data": {"adjustments": [{"absolute": false, "amount": 100, "date": "2024-04-08T02:48:47.425Z", "status": "CANCELLED"}, {"absolute": true, "amount": 100, "date": "2024-11-11T02:51:20.511Z", "status": "PENDING"}], "asset": "USD", "connectorID": "<value>", "createdAt": "2024-02-02T17:45:57.768Z", "destinationAccountID": "<value>", "id": "XXX", "initialAmount": 100, "reference": "<value>", "scheme": "google pay", "sourceAccountID": "<value>", "status": "TERMINATED", "type": "PAY-IN"}}, "ListWallets": {"cursor": {"data": [{"createdAt": "2024-12-06T17:39:27.860Z", "id": "ffbd66e8-3ce0-4c96-a10c-8f8e0fc37bf1", "ledger": "<value>", "metadata": {}, "name": "<value>"}, {"createdAt": "2022-10-08T10:30:27.460Z", "id": "cc38d81a-72b4-44c3-9e12-1021e7d24c49", "ledger": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "name": "<value>"}, {"createdAt": "2022-08-19T00:05:57.472Z", "id": "52b35c03-d99a-4510-8a1f-81f33c690889", "ledger": "<value>", "metadata": {}, "name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}, "RevertTransaction": {"data": {"id": 619586, "metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "reverted": false, "timestamp": "2022-05-29T15:10:35.259Z"}}}, "startedAt": "2022-07-02T11:58:56.305Z", "terminated": false}, {"attempt": 626222, "input": {"CreateTransaction": {"data": {"metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "script": {"plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n", "vars": {"user": "users:042"}}}}, "CreditWallet": {"data": {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "sources": []}}, "DebitWallet": {"data": {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "pending": true}}, "StripeTransfer": {"amount": 100, "asset": "USD", "destination": "acct_1Gqj58KZcSIg2N2q", "waitingValidation": false}}, "name": "<value>", "output": {"CreateTransaction": {"data": {"id": 378579, "metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "reverted": false, "timestamp": "2023-04-16T17:34:05.615Z"}}, "GetAccount": {"data": {"address": "users:001", "effectiveVolumes": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}, "metadata": {"admin": "true"}, "volumes": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}}}, "GetPayment": {"data": {"adjustments": [{"absolute": true, "amount": 100, "date": "2022-09-29T18:17:48.825Z", "status": "FAILED"}, {"absolute": false, "amount": 100, "date": "2024-10-19T21:59:00.100Z", "status": "TERMINATED"}, {"absolute": true, "amount": 100, "date": "2023-08-28T16:14:46.808Z", "status": "TERMINATED"}], "asset": "USD", "connectorID": "<value>", "createdAt": "2024-01-08T21:12:58.328Z", "destinationAccountID": "<value>", "id": "XXX", "initialAmount": 100, "reference": "<value>", "scheme": "ach", "sourceAccountID": "<value>", "status": "PENDING", "type": "TRANSFER"}}, "ListWallets": {"cursor": {"data": [{"createdAt": "2024-04-30T04:49:25.662Z", "id": "3b1509a5-fe8d-4e70-9916-180485cfaa61", "ledger": "<value>", "metadata": {"key": "<value>"}, "name": "<value>"}, {"createdAt": "2024-06-23T23:43:36.792Z", "id": "a6d8edb3-a103-4920-bfca-b898a403e10c", "ledger": "<value>", "metadata": {}, "name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}, "RevertTransaction": {"data": {"id": 155282, "metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "reverted": false, "timestamp": "2022-12-07T07:38:05.268Z"}}}, "startedAt": "2022-12-17T14:52:10.553Z", "terminated": true}]}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  getWorkflow:
    "":
      parameters:
        path:
          flowId: "xxx"
      responses:
        "200":
          application/json: {"data": {"config": {"stages": [{}]}, "createdAt": "2024-03-16T03:14:12.617Z", "id": "<id>", "updatedAt": "2023-11-14T22:03:51.333Z"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  listInstances:
    "":
      parameters:
        query:
          workflowID: "xxx"
          running: true
      responses:
        "200":
          application/json: {"data": [{"createdAt": "2023-07-18T08:20:08.742Z", "id": "<id>", "terminated": true, "updatedAt": "2022-05-04T22:49:25.313Z", "workflowID": "<value>"}]}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  listTriggers:
    speakeasy-default-list-triggers:
      responses:
        "200":
          application/json: {"data": []}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  listTriggersOccurrences:
    speakeasy-default-list-triggers-occurrences:
      parameters:
        path:
          triggerID: "<value>"
      responses:
        "200":
          application/json: {"data": [{"date": "2023-04-12T13:42:33.759Z", "event": {"key": "<value>", "key1": "<value>"}, "triggerID": "<value>"}, {"date": "2022-04-01T04:29:12.442Z", "event": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "triggerID": "<value>"}, {"date": "2023-11-10T03:51:27.854Z", "event": {}, "triggerID": "<value>"}]}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  listWorkflows:
    speakeasy-default-list-workflows:
      responses:
        "200":
          application/json: {"data": []}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  orchestrationgetServerInfo:
    speakeasy-default-orchestrationget-server-info:
      responses:
        "200":
          application/json: {"version": "<value>"}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  readTrigger:
    speakeasy-default-read-trigger:
      parameters:
        path:
          triggerID: "<value>"
      responses:
        "200":
          application/json: {"data": {"createdAt": "2023-08-28T14:30:14.944Z", "event": "<value>", "id": "<id>", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  runWorkflow:
    "":
      parameters:
        path:
          workflowID: "xxx"
        query: {}
      responses:
        "201":
          application/json: {"data": {"createdAt": "2024-11-19T22:37:10.059Z", "id": "<id>", "terminated": false, "updatedAt": "2024-04-08T02:25:10.274Z", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  sendEvent:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        default:
          application/json: {"errorCode": "INTERNAL", "errorMessage": "<value>"}
  testTrigger:
    speakeasy-default-test-trigger:
      parameters:
        path:
          triggerID: "<value>"
      responses:
        "200":
          application/json: {}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2CancelEvent:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  v2CreateTrigger:
    speakeasy-default-v2-create-trigger:
      responses:
        "201":
          application/json: {"data": {"createdAt": "2022-11-04T03:41:44.517Z", "event": "<value>", "id": "<id>", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2CreateWorkflow:
    speakeasy-default-v2-create-workflow:
      responses:
        "201":
          application/json: {"data": {"config": {"stages": [{}, {"key": "<value>", "key1": "<value>"}]}, "createdAt": "2022-02-12T15:53:07.805Z", "id": "<id>", "updatedAt": "2022-07-27T16:59:40.630Z"}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2DeleteTrigger:
    speakeasy-default-v2-delete-trigger:
      parameters:
        path:
          triggerID: "<value>"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  v2DeleteWorkflow:
    "":
      parameters:
        path:
          flowId: "xxx"
      responses:
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2GetInstance:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        "200":
          application/json: {"data": {"createdAt": "2022-04-08T17:02:59.978Z", "id": "<id>", "terminated": true, "updatedAt": "2023-01-21T13:55:08.573Z", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2GetInstanceHistory:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        "200":
          application/json: {"data": []}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  v2GetInstanceStageHistory:
    "":
      parameters:
        path:
          instanceID: "xxx"
          number: 0
      responses:
        "200":
          application/json: {"data": [{"attempt": 841766, "input": {"CreateTransaction": {"data": {"metadata": {"admin": "true"}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "reference": "ref:001", "script": {"plain": "vars {\naccount $user\n}\nsend [COIN 10] (\n\tsource = @world\n\tdestination = $user\n)\n", "vars": {"user": "users:042"}}}}, "CreditWallet": {"data": {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "sources": []}}, "DebitWallet": {"data": {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "pending": true}}, "StripeTransfer": {"amount": 100, "asset": "USD", "destination": "acct_1Gqj58KZcSIg2N2q", "waitingValidation": false}}, "name": "<value>", "output": {"CreateTransaction": {"data": []}, "GetAccount": {"data": {"address": "users:001", "effectiveVolumes": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}, "metadata": {"admin": "true"}, "volumes": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}}}, "GetPayment": {"data": {"adjustments": [{"absolute": true, "amount": 100, "date": "2024-02-16T03:34:37.893Z", "status": "FAILED"}, {"absolute": false, "amount": 100, "date": "2022-12-11T22:33:57.813Z", "status": "TERMINATED"}, {"absolute": true, "amount": 100, "date": "2024-10-24T23:24:46.598Z", "status": "ACTIVE"}], "asset": "USD", "connectorID": "<value>", "createdAt": "2024-08-28T01:33:17.022Z", "destinationAccountID": "<value>", "id": "XXX", "initialAmount": 100, "reference": "<value>", "scheme": "ach", "sourceAccountID": "<value>", "status": "CANCELLED", "type": "PAY-IN"}}, "ListWallets": {"cursor": {"data": [{"createdAt": "2023-06-12T15:56:41.116Z", "id": "4b14fef9-ea6a-4995-9a1d-56fea045f939", "ledger": "<value>", "metadata": {"key": "<value>"}, "name": "<value>"}, {"createdAt": "2024-01-25T19:07:25.922Z", "id": "530f6213-ce0e-4625-8aef-ef49d934bae2", "ledger": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}, "name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}}, "startedAt": "2023-10-10T00:50:47.718Z", "terminated": false}]}
        default:
          application/json: {"errorCode": "INTERNAL", "errorMessage": "<value>"}
  v2GetServerInfo:
    speakeasy-default-v2-get-server-info:
      responses:
        "200":
          application/json: {"version": "<value>"}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  v2GetWorkflow:
    "":
      parameters:
        path:
          flowId: "xxx"
      responses:
        "200":
          application/json: {"data": {"config": {"stages": [{"key": "<value>", "key1": "<value>", "key2": "<value>"}, {}, {"key": "<value>", "key1": "<value>", "key2": "<value>"}]}, "createdAt": "2022-03-05T08:27:54.243Z", "id": "<id>", "updatedAt": "2022-11-10T19:11:38.261Z"}}
        default:
          application/json: {"errorCode": "INTERNAL", "errorMessage": "<value>"}
  v2ListInstances:
    "":
      parameters:
        query:
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          pageSize: 100
          workflowID: "xxx"
          running: true
      responses:
        "200":
          application/json: {"cursor": {"data": [{"createdAt": "2024-02-21T07:16:58.814Z", "id": "<id>", "terminated": true, "updatedAt": "2022-04-08T16:26:11.879Z", "workflowID": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  v2ListTriggers:
    "":
      parameters:
        query:
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          pageSize: 100
      responses:
        "200":
          application/json: {"cursor": {"data": [{"createdAt": "2023-11-07T20:11:26.440Z", "event": "<value>", "id": "<id>", "workflowID": "<value>"}, {"createdAt": "2023-06-30T18:03:09.712Z", "event": "<value>", "id": "<id>", "workflowID": "<value>"}, {"createdAt": "2022-07-20T09:26:29.123Z", "event": "<value>", "id": "<id>", "workflowID": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "INTERNAL", "errorMessage": "<value>"}
  v2ListTriggersOccurrences:
    "":
      parameters:
        path:
          triggerID: "<value>"
        query:
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          pageSize: 100
      responses:
        "200":
          application/json: {"cursor": {"data": [{"date": "2022-03-02T19:38:47.199Z", "event": {}, "triggerID": "<value>"}, {"date": "2022-06-13T06:35:59.010Z", "event": {}, "triggerID": "<value>"}, {"date": "2022-10-11T21:30:54.586Z", "event": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "triggerID": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2ListWorkflows:
    "":
      parameters:
        query:
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          pageSize: 100
      responses:
        "200":
          application/json: {"cursor": {"data": [], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2ReadTrigger:
    speakeasy-default-v2-read-trigger:
      parameters:
        path:
          triggerID: "<value>"
      responses:
        "200":
          application/json: {"data": {"createdAt": "2024-07-19T18:33:02.672Z", "event": "<value>", "id": "<id>", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "NOT_FOUND", "errorMessage": "<value>"}
  v2RunWorkflow:
    "":
      parameters:
        path:
          workflowID: "xxx"
        query: {}
      responses:
        "201":
          application/json: {"data": {"createdAt": "2022-09-25T14:53:09.271Z", "id": "<id>", "terminated": true, "updatedAt": "2022-04-09T08:35:46.658Z", "workflowID": "<value>"}}
        default:
          application/json: {"errorCode": "INTERNAL", "errorMessage": "<value>"}
  v2SendEvent:
    "":
      parameters:
        path:
          instanceID: "xxx"
      responses:
        default:
          application/json: {"errorCode": "INTERNAL", "errorMessage": "<value>"}
  addAccountToPool:
    "":
      parameters:
        path:
          poolId: "XXX"
      requestBody:
        application/json: {"accountID": "<value>"}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  connectorsTransfer:
    speakeasy-default-connectors-transfer:
      parameters:
        path:
          connector: "BANKING-CIRCLE"
      requestBody:
        application/json: {"amount": 100, "asset": "USD", "destination": "acct_1Gqj58KZcSIg2N2q", "source": "acct_1Gqj58KZcSIg2N2q"}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
        "200": {}
  createAccount:
    speakeasy-default-create-account:
      requestBody:
        application/json: {"connectorID": "<value>", "createdAt": "2024-08-19T02:15:08.152Z", "reference": "<value>", "type": "INTERNAL"}
      responses:
        "200":
          application/json: {"data": {"accountName": "<value>", "connectorID": "<value>", "createdAt": "2022-04-28T00:06:23.447Z", "defaultAsset": "<value>", "defaultCurrency": "<value>", "id": "<id>", "metadata": {"key": "<value>", "key1": "<value>"}, "reference": "<value>", "type": "INTERNAL"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  createBankAccount:
    speakeasy-default-create-bank-account:
      requestBody:
        application/json: {"connectorID": "<value>", "country": "GB", "name": "My account"}
      responses:
        "200":
          application/json: {"data": {"connectorID": "<value>", "country": "Holy See (Vatican City State)", "createdAt": "2023-09-01T23:24:27.067Z", "id": "<id>", "name": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  createPayment:
    speakeasy-default-create-payment:
      requestBody:
        application/json: {"amount": 100, "asset": "USD", "connectorID": "<value>", "createdAt": "2024-11-09T01:03:21.011Z", "reference": "<value>", "scheme": "molpay", "status": "REFUNDED_FAILURE", "type": "PAYOUT"}
      responses:
        "200":
          application/json: {"data": {"adjustments": [], "amount": 100, "asset": "USD", "connectorID": "<value>", "createdAt": "2022-02-21T01:47:02.496Z", "destinationAccountID": "<value>", "id": "XXX", "initialAmount": 100, "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "reference": "<value>", "scheme": "cup", "sourceAccountID": "<value>", "status": "OTHER", "type": "PAY-IN"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  createPool:
    speakeasy-default-create-pool:
      requestBody:
        application/json: {"accountIDs": ["<value>", "<value>", "<value>"], "name": "<value>"}
      responses:
        "200":
          application/json: {"data": {"accounts": [], "id": "<id>", "name": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  createTransferInitiation:
    speakeasy-default-create-transfer-initiation:
      requestBody:
        application/json: {"amount": 256698, "asset": "USD", "description": "Open-architected heuristic knowledge user", "destinationAccountID": "<value>", "reference": "XXX", "scheduledAt": "2024-05-21T00:04:35.840Z", "sourceAccountID": "<value>", "type": "PAYOUT", "validated": false}
      responses:
        "200":
          application/json: {"data": {"amount": 667943, "asset": "USD", "connectorID": "<value>", "createdAt": "2024-12-15T17:54:39.112Z", "description": "Open-architected optimizing core", "destinationAccountID": "<value>", "error": "<value>", "id": "XXX", "initialAmount": 589663, "reference": "<value>", "scheduledAt": "2022-06-20T17:02:24.720Z", "sourceAccountID": "<value>", "status": "ASK_REVERSED", "type": "PAYOUT"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  deletePool:
    "":
      parameters:
        path:
          poolId: "XXX"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  deleteTransferInitiation:
    "":
      parameters:
        path:
          transferId: "XXX"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  forwardBankAccount:
    "":
      parameters:
        path:
          bankAccountId: "XXX"
      requestBody:
        application/json: {"connectorID": "<value>"}
      responses:
        "200":
          application/json: {"data": {"connectorID": "<value>", "country": "Belize", "createdAt": "2022-01-21T13:08:56.229Z", "id": "<id>", "name": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getAccountBalances:
    "":
      parameters:
        path:
          accountId: "XXX"
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          sort: ["date:asc", "status:desc"]
      responses:
        "200":
          application/json: {"cursor": {"data": [{"accountId": "<value>", "asset": "<value>", "balance": 125462, "createdAt": "2023-01-30T03:48:20.670Z", "currency": "Argentine Peso", "lastUpdatedAt": "2024-07-01T14:03:15.166Z"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getBankAccount:
    "":
      parameters:
        path:
          bankAccountId: "XXX"
      responses:
        "200":
          application/json: {"data": {"connectorID": "<value>", "country": "Colombia", "createdAt": "2022-03-04T16:16:17.382Z", "id": "<id>", "name": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getConnectorTask:
    "":
      parameters:
        path:
          connector: "ADYEN"
          taskId: "task1"
      responses:
        "200":
          application/json: {"data": {"connectorID": "<id>", "createdAt": "2022-09-14T18:08:36.551Z", "id": "b8d4a71b-a457-4542-9afd-b17eed3b13ec", "status": "EXPIRED", "updatedAt": "2022-08-01T16:40:57.832Z"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getConnectorTaskV1:
    "":
      parameters:
        path:
          connector: "BANKING-CIRCLE"
          connectorId: "XXX"
          taskId: "task1"
      responses:
        "200":
          application/json: {"data": {"connectorID": "<id>", "createdAt": "2023-05-15T09:04:44.604Z", "id": "2592c3a8-ba28-46c9-923f-e1c798f795cd", "status": "CANCELLED", "updatedAt": "2022-05-07T01:38:27.888Z"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getPayment:
    "":
      parameters:
        path:
          paymentId: "XXX"
      responses:
        "200":
          application/json: {"data": {"adjustments": [{"amount": 100, "createdAt": "2024-11-19T01:14:15.129Z", "reference": "<value>", "status": "EXPIRED"}], "amount": 100, "asset": "USD", "connectorID": "<value>", "createdAt": "2023-02-18T17:18:36.576Z", "destinationAccountID": "<value>", "id": "XXX", "initialAmount": 100, "metadata": {"key": "<value>", "key1": "<value>"}, "reference": "<value>", "scheme": "unionpay", "sourceAccountID": "<value>", "status": "DISPUTE", "type": "TRANSFER"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getPool:
    "":
      parameters:
        path:
          poolId: "XXX"
      responses:
        "200":
          application/json: {"data": {"accounts": [], "id": "<id>", "name": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getPoolBalances:
    "":
      parameters:
        path:
          poolId: "XXX"
        query:
          at: "2023-05-05T06:40:23.119Z"
      responses:
        "200":
          application/json: {"data": {"balances": []}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  getTransferInitiation:
    "":
      parameters:
        path:
          transferId: "XXX"
      responses:
        "200":
          application/json: {"data": {"amount": 72812, "asset": "USD", "connectorID": "<value>", "createdAt": "2022-06-13T16:04:12.992Z", "description": "Decentralized static instruction set", "destinationAccountID": "<value>", "error": "<value>", "id": "XXX", "initialAmount": 394563, "reference": "<value>", "scheduledAt": "2022-07-01T22:59:29.875Z", "sourceAccountID": "<value>", "status": "ASK_REVERSED", "type": "PAYOUT"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  installConnector:
    speakeasy-default-install-connector:
      parameters:
        path:
          connector: "ATLAR"
      requestBody:
        application/json: {"apiKey": "XXX", "name": "My Stripe Account", "pageSize": 50, "pollingPeriod": "60s"}
      responses:
        "201":
          application/json: {"data": {"connectorID": "<value>"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listAllConnectors:
    speakeasy-default-list-all-connectors:
      responses:
        "200":
          application/json: {"data": [{"connectorID": "<value>", "name": "<value>", "provider": "MONEYCORP"}, {"connectorID": "<value>", "name": "<value>", "provider": "CURRENCY-CLOUD"}]}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listBankAccounts:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          sort: ["date:asc", "status:desc"]
      responses:
        "200":
          application/json: {"cursor": {"data": [{"connectorID": "<value>", "country": "Bahrain", "createdAt": "2022-02-23T22:10:49.411Z", "id": "<id>", "name": "<value>"}, {"connectorID": "<value>", "country": "Myanmar", "createdAt": "2022-12-30T23:44:22.122Z", "id": "<id>", "name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listConfigsAvailableConnectors:
    speakeasy-default-list-configs-available-connectors:
      responses:
        "200":
          application/json: {"data": {"connector": {"key": {"dataType": "real", "required": false}}}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listConnectorTasks:
    "":
      parameters:
        path:
          connector: "MODULR"
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"connectorID": "<id>", "createdAt": "2023-08-25T00:07:31.663Z", "id": "86943aba-d61f-47aa-80d9-91cf9266dd48", "status": "FAILED", "updatedAt": "2024-07-04T01:56:37.650Z"}, {"connectorID": "<id>", "createdAt": "2023-10-16T18:08:06.313Z", "id": "c3f67835-1bc6-400c-bf3e-ffe2c5cad006", "status": "FAILED", "updatedAt": "2024-12-26T02:29:47.666Z"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listConnectorTasksV1:
    "":
      parameters:
        path:
          connector: "BANKING-CIRCLE"
          connectorId: "XXX"
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"connectorID": "<id>", "createdAt": "2024-06-21T02:32:58.781Z", "id": "98119bf1-d77f-40d7-aa95-f6d1de55906f", "status": "EXPIRED", "updatedAt": "2022-05-12T10:18:09.979Z"}, {"connectorID": "<id>", "createdAt": "2022-03-08T11:32:23.574Z", "id": "6a636e77-2b1d-453e-86e1-a0f8d94fbd4d", "status": "REFUNDED", "updatedAt": "2024-05-01T19:24:21.069Z"}, {"connectorID": "<id>", "createdAt": "2024-04-25T04:53:52.895Z", "id": "dc3d5edc-7f3f-4cd2-ab14-3091094b0590", "status": "DISPUTE", "updatedAt": "2024-01-15T12:09:57.416Z"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listPayments:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          sort: ["date:asc", "status:desc"]
      responses:
        "200":
          application/json: {"cursor": {"data": [], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listPools:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          sort: ["date:asc", "status:desc"]
      responses:
        "200":
          application/json: {"cursor": {"data": [{"accounts": ["<value>", "<value>"], "id": "<id>", "name": "<value>"}, {"accounts": ["<value>"], "id": "<id>", "name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  listTransferInitiations:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          sort: ["date:asc", "status:desc"]
      responses:
        "200":
          application/json: {"cursor": {"data": [{"amount": 27378, "asset": "USD", "connectorID": "<value>", "createdAt": "2023-04-13T17:55:51.446Z", "description": "Vision-oriented radical function", "destinationAccountID": "<value>", "error": "<value>", "id": "XXX", "initialAmount": 47897, "reference": "<value>", "scheduledAt": "2022-12-15T03:41:36.930Z", "sourceAccountID": "<value>", "status": "ASK_REVERSED", "type": "TRANSFER"}, {"amount": 807297, "asset": "USD", "connectorID": "<value>", "createdAt": "2024-08-31T18:02:45.179Z", "description": "Adaptive dynamic conglomeration", "destinationAccountID": "<value>", "error": "<value>", "id": "XXX", "initialAmount": 788691, "reference": "<value>", "scheduledAt": "2024-10-10T20:02:17.461Z", "sourceAccountID": "<value>", "status": "ASK_RETRIED", "type": "TRANSFER"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  paymentsgetAccount:
    "":
      parameters:
        path:
          accountId: "XXX"
      responses:
        "200":
          application/json: {"data": {"accountName": "<value>", "connectorID": "<value>", "createdAt": "2023-11-13T03:25:46.461Z", "defaultAsset": "<value>", "defaultCurrency": "<value>", "id": "<id>", "metadata": {}, "reference": "<value>", "type": "UNKNOWN"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  paymentsgetServerInfo:
    speakeasy-default-paymentsget-server-info:
      responses:
        "200":
          application/json: {"version": "<value>"}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  paymentslistAccounts:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          sort: ["date:asc", "status:desc"]
      responses:
        "200":
          application/json: {"cursor": {"data": [], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  readConnectorConfig:
    speakeasy-default-read-connector-config:
      parameters:
        path:
          connector: "GENERIC"
      responses:
        "200":
          application/json: {"data": {"accessKey": "XXX", "baseUrl": "https://api.example.com", "name": "My Atlar Account", "pageSize": 50, "pollingPeriod": "60s", "secret": "XXX", "transferInitiationStatusPollingPeriod": "60s"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  readConnectorConfigV1:
    "":
      parameters:
        path:
          connector: "CURRENCY-CLOUD"
          connectorId: "XXX"
      responses:
        "200":
          application/json: {"data": {"apiKey": "XXX", "apiSecret": "XXX", "endpoint": "XXX", "name": "My Modulr Account", "pollingPeriod": "60s"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  removeAccountFromPool:
    "":
      parameters:
        path:
          poolId: "XXX"
          accountId: "XXX"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  resetConnector:
    speakeasy-default-reset-connector:
      parameters:
        path:
          connector: "ATLAR"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  resetConnectorV1:
    "":
      parameters:
        path:
          connector: "GENERIC"
          connectorId: "XXX"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  retryTransferInitiation:
    "":
      parameters:
        path:
          transferId: "XXX"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  reverseTransferInitiation:
    "":
      parameters:
        path:
          transferId: "XXX"
      requestBody:
        application/json: {"amount": 327549, "asset": "USD", "description": "Multi-channelled responsive capability", "metadata": {"key": "<value>", "key1": "<value>"}, "reference": "XXX"}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  udpateTransferInitiationStatus:
    "":
      parameters:
        path:
          transferId: "XXX"
      requestBody:
        application/json: {"status": "VALIDATED"}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  uninstallConnector:
    speakeasy-default-uninstall-connector:
      parameters:
        path:
          connector: "MODULR"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  uninstallConnectorV1:
    "":
      parameters:
        path:
          connector: "GENERIC"
          connectorId: "XXX"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  updateBankAccountMetadata:
    "":
      parameters:
        path:
          bankAccountId: "XXX"
      requestBody:
        application/json: {"metadata": {}}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  updateConnectorConfigV1:
    "":
      parameters:
        path:
          connector: "ADYEN"
          connectorId: "XXX"
      requestBody:
        application/json: {"apiKey": "XXX", "name": "My Stripe Account", "pageSize": 50, "pollingPeriod": "60s"}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  updateMetadata:
    "":
      parameters:
        path:
          paymentId: "XXX"
      requestBody:
        application/json: {"key": "<value>", "key1": "<value>"}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "[VALIDATION] missing reference"}
  createPolicy:
    speakeasy-default-create-policy:
      requestBody:
        application/json: {"ledgerName": "default", "ledgerQuery": {"key": "<value>"}, "name": "XXX", "paymentsPoolID": "XXX"}
      responses:
        "201":
          application/json: {"data": {"createdAt": "2021-01-01T00:00:00.000Z", "id": "XXX", "ledgerName": "default", "ledgerQuery": {"key": "<value>"}, "name": "XXX", "paymentsPoolID": "XXX"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  deletePolicy:
    "":
      parameters:
        path:
          policyID: "XXX"
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  getPolicy:
    "":
      parameters:
        path:
          policyID: "XXX"
      responses:
        "200":
          application/json: {"data": {"createdAt": "2021-01-01T00:00:00.000Z", "id": "XXX", "ledgerName": "default", "ledgerQuery": {}, "name": "XXX", "paymentsPoolID": "XXX"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  getReconciliation:
    "":
      parameters:
        path:
          reconciliationID: "XXX"
      responses:
        "200":
          application/json: {"data": {"createdAt": "2021-01-01T00:00:00.000Z", "driftBalances": {"key": 20102}, "id": "XXX", "ledgerBalances": {"key": 644430}, "paymentsBalances": {"key": 515705, "key1": 559208, "key2": 533533}, "policyID": "XXX", "reconciledAtLedger": "2021-01-01T00:00:00.000Z", "reconciledAtPayments": "2021-01-01T00:00:00.000Z", "status": "COMPLETED"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  listPolicies:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"createdAt": "2021-01-01T00:00:00.000Z", "id": "XXX", "ledgerName": "default", "ledgerQuery": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "name": "XXX", "paymentsPoolID": "XXX"}, {"createdAt": "2021-01-01T00:00:00.000Z", "id": "XXX", "ledgerName": "default", "ledgerQuery": {"key": "<value>", "key1": "<value>"}, "name": "XXX", "paymentsPoolID": "XXX"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  listReconciliations:
    "":
      parameters:
        query:
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"createdAt": "2021-01-01T00:00:00.000Z", "driftBalances": {"key": 241236}, "id": "XXX", "ledgerBalances": {"key": 129090}, "paymentsBalances": {}, "policyID": "XXX", "reconciledAtLedger": "2021-01-01T00:00:00.000Z", "reconciledAtPayments": "2021-01-01T00:00:00.000Z", "status": "COMPLETED"}, {"createdAt": "2021-01-01T00:00:00.000Z", "driftBalances": {"key": 348338, "key1": 435529}, "id": "XXX", "ledgerBalances": {"key": 522670, "key1": 92384}, "paymentsBalances": {"key": 973678}, "policyID": "XXX", "reconciledAtLedger": "2021-01-01T00:00:00.000Z", "reconciledAtPayments": "2021-01-01T00:00:00.000Z", "status": "COMPLETED"}, {"createdAt": "2021-01-01T00:00:00.000Z", "driftBalances": {"key": 428459, "key1": 727, "key2": 640782}, "id": "XXX", "ledgerBalances": {}, "paymentsBalances": {"key": 119837}, "policyID": "XXX", "reconciledAtLedger": "2021-01-01T00:00:00.000Z", "reconciledAtPayments": "2021-01-01T00:00:00.000Z", "status": "COMPLETED"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  reconcile:
    "":
      parameters:
        path:
          policyID: "XXX"
      requestBody:
        application/json: {"reconciledAtLedger": "2021-01-01T00:00:00.000Z", "reconciledAtPayments": "2021-01-01T00:00:00.000Z"}
      responses:
        "200":
          application/json: {"data": {"createdAt": "2021-01-01T00:00:00.000Z", "driftBalances": {"key": 971386}, "id": "XXX", "ledgerBalances": {"key": 1060, "key1": 30487, "key2": 427345}, "paymentsBalances": {"key": 17991, "key1": 837229}, "policyID": "XXX", "reconciledAtLedger": "2021-01-01T00:00:00.000Z", "reconciledAtPayments": "2021-01-01T00:00:00.000Z", "status": "COMPLETED"}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  reconciliationgetServerInfo:
    speakeasy-default-reconciliationget-server-info:
      responses:
        "200":
          application/json: {"version": "<value>"}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  search:
    speakeasy-default-search:
      requestBody:
        application/json: {"after": ["users:002"], "cursor": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=", "ledgers": ["quickstart"], "policy": "OR", "sort": "id:asc", "terms": ["destination=central_bank1"]}
      responses:
        "200":
          application/json: {"cursor": {"next": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=", "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=", "total": {"relation": "eq", "value": 1}}}
  searchgetServerInfo:
    speakeasy-default-searchget-server-info:
      responses:
        "200":
          application/json: {"version": "<value>"}
  confirmHold:
    speakeasy-default-confirm-hold:
      parameters:
        path:
          hold_id: "<value>"
        header: {}
      requestBody:
        application/json: {"amount": 100, "final": true}
      responses:
        default:
          application/json: {"errorCode": "INSUFFICIENT_FUND", "errorMessage": "<value>"}
  createBalance:
    speakeasy-default-create-balance:
      parameters:
        path:
          id: "<id>"
        header: {}
      responses:
        "201":
          application/json: {"data": {"name": "<value>"}}
        default:
          application/json: {"errorCode": "INSUFFICIENT_FUND", "errorMessage": "<value>"}
  createWallet:
    speakeasy-default-create-wallet:
      responses:
        "201":
          application/json: {"data": {"createdAt": "2023-08-08T07:13:48.961Z", "id": "28d5e2b6-b532-4ea9-ac35-db845f4bcf19", "ledger": "<value>", "metadata": {"key": "<value>"}, "name": "<value>"}}
        default:
          application/json: {"errorCode": "HOLD_CLOSED", "errorMessage": "<value>"}
  creditWallet:
    speakeasy-default-credit-wallet:
      parameters:
        path:
          id: "<id>"
        header: {}
      requestBody:
        application/json: {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "sources": []}
      responses:
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  debitWallet:
    speakeasy-default-debit-wallet:
      parameters:
        path:
          id: "<id>"
        header: {}
      requestBody:
        application/json: {"amount": {"amount": 100, "asset": "USD/2"}, "metadata": {"key": ""}, "pending": true}
      responses:
        "201":
          application/json: {"data": {"description": "Ergonomic regional concept", "id": "e31c9764-aff0-4e32-8438-642504cfcb20", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "walletID": "<value>"}}
        default:
          application/json: {"errorCode": "INTERNAL_ERROR", "errorMessage": "<value>"}
  getBalance:
    speakeasy-default-get-balance:
      parameters:
        path:
          id: "<id>"
          balanceName: "<value>"
      responses:
        "200":
          application/json: {"data": {"assets": {"key": 623534, "key1": 686479, "key2": 925894}, "name": "<value>"}}
        default:
          application/json: {"errorCode": "INSUFFICIENT_FUND", "errorMessage": "<value>"}
  getHold:
    speakeasy-default-get-hold:
      parameters:
        path:
          holdID: "<value>"
      responses:
        "200":
          application/json: {"data": {"description": "Configurable tertiary structure", "id": "293a3cbc-52a6-4577-8e13-fcd41399917b", "metadata": {"key": "<value>"}, "originalAmount": 100, "remaining": 10, "walletID": "<value>"}}
        default:
          application/json: {"errorCode": "HOLD_CLOSED", "errorMessage": "<value>"}
  getHolds:
    "":
      parameters:
        query:
          pageSize: 100
          walletID: "wallet1"
          metadata: {"admin": "true"}
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"description": "Right-sized contextually-based installation", "id": "e7f02ffb-79e0-4c5e-8972-b9f4fccdfc8a", "metadata": {"key": "<value>"}, "walletID": "<value>"}, {"description": "Automated scalable productivity", "id": "f786b1b3-d187-4d63-8f89-bfedd25071f7", "metadata": {"key": "<value>", "key1": "<value>"}, "walletID": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "INSUFFICIENT_FUND", "errorMessage": "<value>"}
  getTransactions:
    "":
      parameters:
        query:
          pageSize: 100
          walletID: "wallet1"
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
      responses:
        "200":
          application/json: {"cursor": {"data": [{"id": 417503, "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "postCommitVolumes": {}, "postings": [], "preCommitVolumes": {"key": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}, "key1": {"USD": {"balance": 90, "input": 100, "output": 10}, "EUR": {"balance": 90, "input": 100, "output": 10}}}, "reference": "ref:001", "timestamp": "2024-04-16T13:08:57.024Z"}, {"id": 751740, "metadata": {"key": "<value>", "key1": "<value>"}, "postCommitVolumes": {}, "postings": [{"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}, {"amount": 100, "asset": "COIN", "destination": "users:002", "source": "users:001"}], "preCommitVolumes": {}, "reference": "ref:001", "timestamp": "2022-04-29T22:11:40.809Z"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  getWallet:
    speakeasy-default-get-wallet:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"data": {"balances": {"main": {"assets": {"key": 571864}}}, "createdAt": "2023-11-14T05:25:13.185Z", "id": "bec36009-93cb-484f-9620-8873422591bc", "ledger": "<value>", "metadata": {"key": "<value>"}, "name": "<value>"}}
        default:
          application/json: {"errorCode": "INSUFFICIENT_FUND", "errorMessage": "<value>"}
  getWalletSummary:
    speakeasy-default-get-wallet-summary:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"availableFunds": {"key": 265270, "key1": 425645}, "balances": [{"assets": {}, "name": "<value>"}], "expirableFunds": {}, "expiredFunds": {"key": 937378, "key1": 696335, "key2": 846984}, "holdFunds": {"key": 930990, "key1": 132783, "key2": 515347}}
        default:
          application/json: {"errorCode": "INSUFFICIENT_FUND", "errorMessage": "<value>"}
  listBalances:
    speakeasy-default-list-balances:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"cursor": {"data": [{"name": "<value>"}, {"name": "<value>"}, {"name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
  listWallets:
    "":
      parameters:
        query:
          name: "wallet1"
          metadata: {"admin": "true"}
          pageSize: 100
          cursor: "aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ=="
          expand: "balances"
      responses:
        "200":
          application/json: {"cursor": {"data": [{"createdAt": "2022-02-28T12:24:12.671Z", "id": "acf390dc-7f51-40b9-8bec-968d375f0c57", "ledger": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}, "name": "<value>"}], "hasMore": false, "next": "", "pageSize": 15, "previous": "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="}}
        default:
          application/json: {"errorCode": "VALIDATION", "errorMessage": "<value>"}
  updateWallet:
    speakeasy-default-update-wallet:
      parameters:
        path:
          id: "<id>"
        header: {}
      responses:
        default:
          application/json: {"errorCode": "INSUFFICIENT_FUND", "errorMessage": "<value>"}
  voidHold:
    speakeasy-default-void-hold:
      parameters:
        path:
          hold_id: "<value>"
        header: {}
      responses:
        default:
          application/json: {"errorCode": "HOLD_CLOSED", "errorMessage": "<value>"}
  walletsgetServerInfo:
    speakeasy-default-walletsget-server-info:
      responses:
        "200":
          application/json: {"version": "<value>"}
        default:
          application/json: {"errorCode": "INTERNAL_ERROR", "errorMessage": "<value>"}
  activateConfig:
    speakeasy-default-activate-config:
      parameters:
        path:
          id: "4997257d-dfb6-445b-929c-cbe2ab182818"
      responses:
        "200":
          application/json: {"data": {"active": true, "createdAt": "2024-04-13T00:54:15.165Z", "endpoint": "https://example.com", "eventTypes": ["TYPE1"], "id": "614a5830-bda0-4680-b1ea-6090dd8532c6", "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3", "updatedAt": "2022-07-24T14:37:40.680Z"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  changeConfigSecret:
    speakeasy-default-change-config-secret:
      parameters:
        path:
          id: "4997257d-dfb6-445b-929c-cbe2ab182818"
      requestBody:
        application/json: {"secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3"}
      responses:
        "200":
          application/json: {"data": {"active": true, "createdAt": "2022-12-07T06:10:53.379Z", "endpoint": "https://example.com", "eventTypes": ["TYPE1"], "id": "8470f220-7a70-4ef7-9be4-3432827b4f03", "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3", "updatedAt": "2022-11-27T20:14:58.331Z"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  deactivateConfig:
    speakeasy-default-deactivate-config:
      parameters:
        path:
          id: "4997257d-dfb6-445b-929c-cbe2ab182818"
      responses:
        "200":
          application/json: {"data": {"active": true, "createdAt": "2022-11-29T11:20:57.032Z", "endpoint": "https://example.com", "eventTypes": ["TYPE1"], "id": "85e5b25b-022b-4bd7-8c33-fbf5950d0f8f", "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3", "updatedAt": "2023-05-27T16:43:50.510Z"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  deleteConfig:
    speakeasy-default-delete-config:
      parameters:
        path:
          id: "4997257d-dfb6-445b-929c-cbe2ab182818"
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  getManyConfigs:
    speakeasy-default-get-many-configs:
      parameters:
        query:
          id: "4997257d-dfb6-445b-929c-cbe2ab182818"
          endpoint: "https://example.com"
      responses:
        "200":
          application/json: {"cursor": {"data": [{"active": true, "createdAt": "2022-10-03T21:24:00.401Z", "endpoint": "https://example.com", "eventTypes": ["TYPE1"], "id": "f1f67d72-d5d3-4e22-8f79-851fcbdc0d83", "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3", "updatedAt": "2022-02-14T18:49:51.264Z"}], "hasMore": false}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  insertConfig:
    speakeasy-default-insert-config:
      requestBody:
        application/json: {"endpoint": "https://example.com", "eventTypes": ["TYPE1"], "name": "customer_payment", "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3"}
      responses:
        "200":
          application/json: {"data": {"active": true, "createdAt": "2024-08-30T14:01:19.887Z", "endpoint": "https://example.com", "eventTypes": ["TYPE1"], "id": "0f756b09-5b38-465b-b8f2-983f240d4f5c", "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3", "updatedAt": "2023-08-10T10:29:51.537Z"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  testConfig:
    speakeasy-default-test-config:
      parameters:
        path:
          id: "4997257d-dfb6-445b-929c-cbe2ab182818"
      responses:
        "200":
          application/json: {"data": {"config": {"active": true, "createdAt": "2023-05-30T09:53:58.891Z", "endpoint": "https://example.com", "eventTypes": ["TYPE1"], "id": "86054b6d-7f7e-4fb8-8f2f-b6a855cea0c7", "secret": "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3", "updatedAt": "2022-04-25T07:02:46.380Z"}, "createdAt": "2024-06-16T21:37:32.643Z", "id": "c7827ed3-469f-4c48-a7d1-c853b7f1271e", "payload": "{\"data\":\"test\"}", "retryAttempt": 1, "status": "success", "statusCode": 200, "updatedAt": "2023-10-19T10:47:20.940Z", "webhookID": "05f47970-be91-4384-9266-38e01d5768d6"}}
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
  getServerInfo:
    speakeasy-default-get-server-info:
      responses:
        "200":
          application/json: {"version": "<value>"}
  v2ExportLogs:
    speakeasy-default-v2-export-logs:
      parameters:
        path:
          ledger: "ledger001"
  v2ImportLogs:
    speakeasy-default-v2-import-logs:
      parameters:
        path:
          ledger: "ledger001"
      responses:
        default:
          application/json: {"details": "https://play.numscript.org/?payload=eyJlcnJvciI6ImFjY291bnQgaGFkIGluc3VmZmljaWVudCBmdW5kcyJ9", "errorCode": "VALIDATION", "errorMessage": "[VALIDATION] invalid 'cursor' query param"}
