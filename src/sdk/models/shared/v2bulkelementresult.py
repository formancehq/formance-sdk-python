"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import v2transaction as shared_v2transaction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2BulkElementResultV2BulkElementResultError:
    error_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCode') }})
    error_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorDescription') }})
    response_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseType') }})
    error_details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorDetails'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2BulkElementResultV2BulkElementResultDeleteMetadata:
    response_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseType') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2BulkElementResultV2BulkElementResultRevertTransaction:
    data: shared_v2transaction.V2Transaction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})
    response_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseType') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2BulkElementResultV2BulkElementResultAddMetadata:
    response_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseType') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2BulkElementResultV2BulkElementResultCreateTransaction:
    data: shared_v2transaction.V2Transaction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})
    response_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseType') }})
    



@dataclasses.dataclass
class V2BulkElementResult:
    pass
