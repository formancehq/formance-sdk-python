"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from .v2connector import V2Connector
from .v2paymentadjustment import V2PaymentAdjustment
from .v2paymentmetadata import V2PaymentMetadata
from .v2paymentstatus import V2PaymentStatus
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from sdk import utils
from typing import List, Optional


@dataclasses.dataclass
class V2PaymentRaw:
    pass

class Scheme(str, Enum):
    VISA = 'visa'
    MASTERCARD = 'mastercard'
    AMEX = 'amex'
    DINERS = 'diners'
    DISCOVER = 'discover'
    JCB = 'jcb'
    UNIONPAY = 'unionpay'
    SEPA_DEBIT = 'sepa debit'
    SEPA_CREDIT = 'sepa credit'
    SEPA = 'sepa'
    APPLE_PAY = 'apple pay'
    GOOGLE_PAY = 'google pay'
    A2A = 'a2a'
    ACH_DEBIT = 'ach debit'
    ACH = 'ach'
    RTP = 'rtp'
    UNKNOWN = 'unknown'
    OTHER = 'other'

class V2PaymentType(str, Enum):
    PAY_IN = 'PAY-IN'
    PAYOUT = 'PAYOUT'
    TRANSFER = 'TRANSFER'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2Payment:
    adjustments: List[V2PaymentAdjustment] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustments') }})
    asset: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('asset') }})
    connector_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorID') }})
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    destination_account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationAccountID') }})
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    initial_amount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initialAmount') }})
    metadata: Optional[V2PaymentMetadata] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})
    raw: Optional[V2PaymentRaw] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('raw') }})
    reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference') }})
    scheme: Scheme = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheme') }})
    source_account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceAccountID') }})
    status: V2PaymentStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    type: V2PaymentType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    provider: Optional[V2Connector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provider'), 'exclude': lambda f: f is None }})
    

