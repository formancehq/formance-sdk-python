"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.errors import webhookserrorresponse as errors_webhookserrorresponse
from ...models.shared import configsresponse as shared_configsresponse
from typing import Optional


@dataclasses.dataclass
class GetManyConfigsRequest:
    endpoint: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endpoint', 'style': 'form', 'explode': True }})
    r"""Optional filter by endpoint URL"""
    id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""Optional filter by Config ID"""
    



@dataclasses.dataclass
class GetManyConfigsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    configs_response: Optional[shared_configsresponse.ConfigsResponse] = dataclasses.field(default=None)
    r"""OK"""
    webhooks_error_response: Optional[errors_webhookserrorresponse.WebhooksErrorResponse] = dataclasses.field(default=None)
    r"""Error"""
    

