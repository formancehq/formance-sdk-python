"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .paymentstatus import PaymentStatus
from datetime import datetime
from formance_sdk_python.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DescriptorTypedDict(TypedDict):
    key: NotRequired[str]
    name: NotRequired[str]


class Descriptor(BaseModel):
    key: Optional[str] = None

    name: Optional[str] = None


class TaskBankingCircleStateTypedDict(TypedDict):
    pass


class TaskBankingCircleState(BaseModel):
    pass


class TaskBankingCircleTypedDict(TypedDict):
    connector_id: str
    created_at: datetime
    descriptor: DescriptorTypedDict
    id: str
    state: TaskBankingCircleStateTypedDict
    status: PaymentStatus
    updated_at: datetime
    error: NotRequired[str]


class TaskBankingCircle(BaseModel):
    connector_id: Annotated[str, pydantic.Field(alias="connectorID")]

    created_at: Annotated[datetime, pydantic.Field(alias="createdAt")]

    descriptor: Descriptor

    id: str

    state: TaskBankingCircleState

    status: PaymentStatus

    updated_at: Annotated[datetime, pydantic.Field(alias="updatedAt")]

    error: Optional[str] = None
