"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .activityaddaccountmetadata import (
    ActivityAddAccountMetadata,
    ActivityAddAccountMetadataTypedDict,
)
from .activityconfirmhold import ActivityConfirmHold, ActivityConfirmHoldTypedDict
from .activitycreatetransaction import (
    ActivityCreateTransaction,
    ActivityCreateTransactionTypedDict,
)
from .activitycreditwallet import ActivityCreditWallet, ActivityCreditWalletTypedDict
from .activitydebitwallet import ActivityDebitWallet, ActivityDebitWalletTypedDict
from .activitygetaccount import ActivityGetAccount, ActivityGetAccountTypedDict
from .activitygetpayment import ActivityGetPayment, ActivityGetPaymentTypedDict
from .activitygetwallet import ActivityGetWallet, ActivityGetWalletTypedDict
from .activitylistwallets import ActivityListWallets, ActivityListWalletsTypedDict
from .activityreverttransaction import (
    ActivityRevertTransaction,
    ActivityRevertTransactionTypedDict,
)
from .activitystripetransfer import (
    ActivityStripeTransfer,
    ActivityStripeTransferTypedDict,
)
from .activityvoidhold import ActivityVoidHold, ActivityVoidHoldTypedDict
from formance_sdk_python.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class WorkflowInstanceHistoryStageInputTypedDict(TypedDict):
    add_account_metadata: NotRequired[ActivityAddAccountMetadataTypedDict]
    confirm_hold: NotRequired[ActivityConfirmHoldTypedDict]
    create_transaction: NotRequired[ActivityCreateTransactionTypedDict]
    credit_wallet: NotRequired[ActivityCreditWalletTypedDict]
    debit_wallet: NotRequired[ActivityDebitWalletTypedDict]
    get_account: NotRequired[ActivityGetAccountTypedDict]
    get_payment: NotRequired[ActivityGetPaymentTypedDict]
    get_wallet: NotRequired[ActivityGetWalletTypedDict]
    list_wallets: NotRequired[ActivityListWalletsTypedDict]
    revert_transaction: NotRequired[ActivityRevertTransactionTypedDict]
    stripe_transfer: NotRequired[ActivityStripeTransferTypedDict]
    void_hold: NotRequired[ActivityVoidHoldTypedDict]


class WorkflowInstanceHistoryStageInput(BaseModel):
    add_account_metadata: Annotated[
        Optional[ActivityAddAccountMetadata], pydantic.Field(alias="AddAccountMetadata")
    ] = None

    confirm_hold: Annotated[
        Optional[ActivityConfirmHold], pydantic.Field(alias="ConfirmHold")
    ] = None

    create_transaction: Annotated[
        Optional[ActivityCreateTransaction], pydantic.Field(alias="CreateTransaction")
    ] = None

    credit_wallet: Annotated[
        Optional[ActivityCreditWallet], pydantic.Field(alias="CreditWallet")
    ] = None

    debit_wallet: Annotated[
        Optional[ActivityDebitWallet], pydantic.Field(alias="DebitWallet")
    ] = None

    get_account: Annotated[
        Optional[ActivityGetAccount], pydantic.Field(alias="GetAccount")
    ] = None

    get_payment: Annotated[
        Optional[ActivityGetPayment], pydantic.Field(alias="GetPayment")
    ] = None

    get_wallet: Annotated[
        Optional[ActivityGetWallet], pydantic.Field(alias="GetWallet")
    ] = None

    list_wallets: Annotated[
        Optional[ActivityListWallets], pydantic.Field(alias="ListWallets")
    ] = None

    revert_transaction: Annotated[
        Optional[ActivityRevertTransaction], pydantic.Field(alias="RevertTransaction")
    ] = None

    stripe_transfer: Annotated[
        Optional[ActivityStripeTransfer], pydantic.Field(alias="StripeTransfer")
    ] = None

    void_hold: Annotated[
        Optional[ActivityVoidHold], pydantic.Field(alias="VoidHold")
    ] = None
