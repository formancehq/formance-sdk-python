"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from formance_sdk_python.models.shared import (
    getbalanceresponse as shared_getbalanceresponse,
)
from formance_sdk_python.types import BaseModel
from formance_sdk_python.utils import FieldMetadata, PathParamMetadata
import httpx
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetBalanceRequestTypedDict(TypedDict):
    balance_name: str
    id: str


class GetBalanceRequest(BaseModel):
    balance_name: Annotated[
        str,
        pydantic.Field(alias="balanceName"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class GetBalanceResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    get_balance_response: NotRequired[
        shared_getbalanceresponse.GetBalanceResponseTypedDict
    ]
    r"""Balance summary"""


class GetBalanceResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    get_balance_response: Optional[shared_getbalanceresponse.GetBalanceResponse] = None
    r"""Balance summary"""
