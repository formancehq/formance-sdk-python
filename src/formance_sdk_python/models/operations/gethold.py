"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from formance_sdk_python.models.shared import getholdresponse as shared_getholdresponse
from formance_sdk_python.types import BaseModel
from formance_sdk_python.utils import FieldMetadata, PathParamMetadata
import httpx
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetHoldRequestTypedDict(TypedDict):
    hold_id: str
    r"""The hold ID"""


class GetHoldRequest(BaseModel):
    hold_id: Annotated[
        str,
        pydantic.Field(alias="holdID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The hold ID"""


class GetHoldResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    get_hold_response: NotRequired[shared_getholdresponse.GetHoldResponseTypedDict]
    r"""Holds"""


class GetHoldResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    get_hold_response: Optional[shared_getholdresponse.GetHoldResponse] = None
    r"""Holds"""
