"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from formance_sdk_python.models.shared import v2pipeline as shared_v2pipeline
from formance_sdk_python.types import BaseModel
from formance_sdk_python.utils import FieldMetadata, PathParamMetadata
import httpx
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V2ListPipelinesRequestTypedDict(TypedDict):
    ledger: str
    r"""Name of the ledger."""


class V2ListPipelinesRequest(BaseModel):
    ledger: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Name of the ledger."""


class V2ListPipelinesCursor2TypedDict(TypedDict):
    data: List[shared_v2pipeline.V2PipelineTypedDict]
    has_more: bool
    page_size: int
    next: NotRequired[str]
    previous: NotRequired[str]


class V2ListPipelinesCursor2(BaseModel):
    data: List[shared_v2pipeline.V2Pipeline]

    has_more: Annotated[bool, pydantic.Field(alias="hasMore")]

    page_size: Annotated[int, pydantic.Field(alias="pageSize")]

    next: Optional[str] = None

    previous: Optional[str] = None


class V2ListPipelinesCursor1TypedDict(TypedDict):
    cursor: V2ListPipelinesCursor2TypedDict
    data: NotRequired[List[shared_v2pipeline.V2PipelineTypedDict]]


class V2ListPipelinesCursor1(BaseModel):
    cursor: V2ListPipelinesCursor2

    data: Optional[List[shared_v2pipeline.V2Pipeline]] = None


class V2ListPipelinesResponseBodyTypedDict(TypedDict):
    r"""Pipelines list"""

    cursor: NotRequired[V2ListPipelinesCursor1TypedDict]


class V2ListPipelinesResponseBody(BaseModel):
    r"""Pipelines list"""

    cursor: Optional[V2ListPipelinesCursor1] = None


class V2ListPipelinesResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: NotRequired[V2ListPipelinesResponseBodyTypedDict]
    r"""Pipelines list"""


class V2ListPipelinesResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    object: Optional[V2ListPipelinesResponseBody] = None
    r"""Pipelines list"""
