"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from formance_sdk_python.types import BaseModel
from formance_sdk_python.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import httpx
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V2SendEventRequestBodyTypedDict(TypedDict):
    name: str


class V2SendEventRequestBody(BaseModel):
    name: str


class V2SendEventRequestTypedDict(TypedDict):
    instance_id: str
    r"""The instance id"""
    request_body: NotRequired[V2SendEventRequestBodyTypedDict]


class V2SendEventRequest(BaseModel):
    instance_id: Annotated[
        str,
        pydantic.Field(alias="instanceID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The instance id"""

    request_body: Annotated[
        Optional[V2SendEventRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None


class V2SendEventResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""


class V2SendEventResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
