"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from formance_sdk_python.models.shared import (
    v2transactionscursorresponse as shared_v2transactionscursorresponse,
)
from formance_sdk_python.types import BaseModel
from formance_sdk_python.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
import httpx
import pydantic
from typing import Any, Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Order(str, Enum):
    r"""Deprecated: Use sort param"""

    EFFECTIVE = "effective"


class V2ListTransactionsRequestTypedDict(TypedDict):
    request_body: Dict[str, Any]
    ledger: str
    r"""Name of the ledger."""
    cursor: NotRequired[str]
    r"""Parameter used in pagination requests. Maximum page size is set to 15.
    Set to the value of next for the next page of results.
    Set to the value of previous for the previous page of results.
    No other parameters can be set when this parameter is set.

    """
    expand: NotRequired[str]
    order: NotRequired[Order]
    r"""Deprecated: Use sort param"""
    page_size: NotRequired[int]
    r"""The maximum number of results to return per page.

    """
    pit: NotRequired[datetime]
    reverse: NotRequired[bool]
    sort: NotRequired[str]
    r"""Sort results using a field name and order (ascending or descending).
    Format: `<field>:<order>`, where `<field>` is the field name and `<order>` is either `asc` or `desc`.

    """


class V2ListTransactionsRequest(BaseModel):
    request_body: Annotated[
        Dict[str, Any],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    ledger: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Name of the ledger."""

    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Parameter used in pagination requests. Maximum page size is set to 15.
    Set to the value of next for the next page of results.
    Set to the value of previous for the previous page of results.
    No other parameters can be set when this parameter is set.

    """

    expand: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    order: Annotated[
        Optional[Order],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Deprecated: Use sort param"""

    page_size: Annotated[
        Optional[int],
        pydantic.Field(alias="pageSize"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The maximum number of results to return per page.

    """

    pit: Annotated[
        Optional[datetime],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    reverse: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    sort: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Sort results using a field name and order (ascending or descending).
    Format: `<field>:<order>`, where `<field>` is the field name and `<order>` is either `asc` or `desc`.

    """


class V2ListTransactionsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    v2_transactions_cursor_response: NotRequired[
        shared_v2transactionscursorresponse.V2TransactionsCursorResponseTypedDict
    ]
    r"""OK"""


class V2ListTransactionsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    v2_transactions_cursor_response: Optional[
        shared_v2transactionscursorresponse.V2TransactionsCursorResponse
    ] = None
    r"""OK"""
