"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from formance_sdk_python.models.shared import (
    listtriggersresponse as shared_listtriggersresponse,
)
from formance_sdk_python.types import BaseModel
from formance_sdk_python.utils import FieldMetadata, QueryParamMetadata
import httpx
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListTriggersRequestTypedDict(TypedDict):
    name: NotRequired[str]
    r"""search by name"""


class ListTriggersRequest(BaseModel):
    name: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""search by name"""


class ListTriggersResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    list_triggers_response: NotRequired[
        shared_listtriggersresponse.ListTriggersResponseTypedDict
    ]
    r"""List of triggers"""


class ListTriggersResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    list_triggers_response: Optional[
        shared_listtriggersresponse.ListTriggersResponse
    ] = None
    r"""List of triggers"""
