"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from typing import TYPE_CHECKING
from importlib import import_module

if TYPE_CHECKING:
    from .error import Error, ErrorData, ErrorErrorCode
    from .errorresponse import ErrorResponse, ErrorResponseData
    from .paymentserrorresponse import PaymentsErrorResponse, PaymentsErrorResponseData
    from .reconciliationerrorresponse import (
        ReconciliationErrorResponse,
        ReconciliationErrorResponseData,
    )
    from .sdkerror import SDKError
    from .v2error import V2Error, V2ErrorData, V2ErrorErrorCode
    from .v2errorresponse import V2ErrorResponse, V2ErrorResponseData
    from .v3errorresponse import V3ErrorResponse, V3ErrorResponseData
    from .walletserrorresponse import (
        WalletsErrorResponse,
        WalletsErrorResponseData,
        WalletsErrorResponseErrorCode,
    )
    from .webhookserrorresponse import WebhooksErrorResponse, WebhooksErrorResponseData

__all__ = [
    "Error",
    "ErrorData",
    "ErrorErrorCode",
    "ErrorResponse",
    "ErrorResponseData",
    "PaymentsErrorResponse",
    "PaymentsErrorResponseData",
    "ReconciliationErrorResponse",
    "ReconciliationErrorResponseData",
    "SDKError",
    "V2Error",
    "V2ErrorData",
    "V2ErrorErrorCode",
    "V2ErrorResponse",
    "V2ErrorResponseData",
    "V3ErrorResponse",
    "V3ErrorResponseData",
    "WalletsErrorResponse",
    "WalletsErrorResponseData",
    "WalletsErrorResponseErrorCode",
    "WebhooksErrorResponse",
    "WebhooksErrorResponseData",
]

_dynamic_imports: dict[str, str] = {
    "Error": ".error",
    "ErrorData": ".error",
    "ErrorErrorCode": ".error",
    "ErrorResponse": ".errorresponse",
    "ErrorResponseData": ".errorresponse",
    "PaymentsErrorResponse": ".paymentserrorresponse",
    "PaymentsErrorResponseData": ".paymentserrorresponse",
    "ReconciliationErrorResponse": ".reconciliationerrorresponse",
    "ReconciliationErrorResponseData": ".reconciliationerrorresponse",
    "SDKError": ".sdkerror",
    "V2Error": ".v2error",
    "V2ErrorData": ".v2error",
    "V2ErrorErrorCode": ".v2error",
    "V2ErrorResponse": ".v2errorresponse",
    "V2ErrorResponseData": ".v2errorresponse",
    "V3ErrorResponse": ".v3errorresponse",
    "V3ErrorResponseData": ".v3errorresponse",
    "WalletsErrorResponse": ".walletserrorresponse",
    "WalletsErrorResponseData": ".walletserrorresponse",
    "WalletsErrorResponseErrorCode": ".walletserrorresponse",
    "WebhooksErrorResponse": ".webhookserrorresponse",
    "WebhooksErrorResponseData": ".webhookserrorresponse",
}


def __getattr__(attr_name: str) -> object:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__} "
        )

    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)
